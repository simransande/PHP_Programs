{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authguard/auth.guard.ts","./src/app/component/archive/archive.component.css","./src/app/component/archive/archive.component.html","./src/app/component/archive/archive.component.ts","./src/app/component/collaborator/collaborator.component.css","./src/app/component/collaborator/collaborator.component.html","./src/app/component/collaborator/collaborator.component.ts","./src/app/component/error/error.component.css","./src/app/component/error/error.component.html","./src/app/component/error/error.component.ts","./src/app/component/forgotpassword/forgotpassword.component.css","./src/app/component/forgotpassword/forgotpassword.component.html","./src/app/component/forgotpassword/forgotpassword.component.ts","./src/app/component/home/home.component.css","./src/app/component/home/home.component.html","./src/app/component/home/home.component.ts","./src/app/component/label/label.component.css","./src/app/component/label/label.component.html","./src/app/component/label/label.component.ts","./src/app/component/labelnote/labelnote.component.css","./src/app/component/labelnote/labelnote.component.html","./src/app/component/labelnote/labelnote.component.ts","./src/app/component/login/login.component.css","./src/app/component/login/login.component.html","./src/app/component/login/login.component.ts","./src/app/component/notedisplay/notedisplay.component.css","./src/app/component/notedisplay/notedisplay.component.html","./src/app/component/notedisplay/notedisplay.component.ts","./src/app/component/notes/note.list.component.css","./src/app/component/notes/note.list.component.html","./src/app/component/notes/note.list.component.ts","./src/app/component/register/register.component.css","./src/app/component/register/register.component.html","./src/app/component/register/register.component.ts","./src/app/component/reminder/reminder.component.css","./src/app/component/reminder/reminder.component.html","./src/app/component/reminder/reminder.component.ts","./src/app/component/resetpassword/resetpassword.component.css","./src/app/component/resetpassword/resetpassword.component.html","./src/app/component/resetpassword/resetpassword.component.ts","./src/app/component/trash/trash.component.css","./src/app/component/trash/trash.component.html","./src/app/component/trash/trash.component.ts","./src/app/component/update-note/update-note.component.css","./src/app/component/update-note/update-note.component.html","./src/app/component/update-note/update-note.component.ts","./src/app/component/updatelabel/updatelabel.component.css","./src/app/component/updatelabel/updatelabel.component.html","./src/app/component/updatelabel/updatelabel.component.ts","./src/app/directive/toolbar.directive.ts","./src/app/filter/labelnote.pipe.ts","./src/app/filter/notefilter.pipe.ts","./src/app/filter/search-filter.pipe.ts","./src/app/material.module.ts","./src/app/model/noteresponse.ts","./src/app/service/collaborator.service.ts","./src/app/service/index.ts","./src/app/service/label.service.ts","./src/app/service/login.service.ts","./src/app/service/note.service.ts","./src/app/service/register.service.ts","./src/app/service/tokeninterceptor.ts","./src/app/service/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","/**Purpose:This is routing module contains path of every component to be routed\n * @author: SANA SHAIKh\n * @since: 9/April/2018\n */\n\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './component/register/register.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { ForgotpasswordComponent } from './component/forgotpassword/forgotpassword.component';\nimport { ResetpasswordComponent } from './component/resetpassword/resetpassword.component';\nimport { NoteListComponent } from './component/notes/note.list.component';\nimport { TrashComponent } from './component/trash/trash.component';\nimport { ArchiveComponent } from './component/archive/archive.component';\nimport { ReminderComponent } from './component/reminder/reminder.component';\nimport { ErrorComponent } from './component/error/error.component';\nimport { LabelnoteComponent } from './component/labelnote/labelnote.component';\n\nimport { AuthGuard } from './authguard/auth.guard';\nimport { LoginAuthGuard } from './authguard/auth.guard';\n//import { OnlyLoggedInUsersGuard } from './guard/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  {\n    path: 'home', component: HomeComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'createnotes', pathMatch: 'full' },\n      { path: 'createnotes', component: NoteListComponent },\n      { path: 'trash', component:TrashComponent },\n      { path: 'archive', component:ArchiveComponent },\n      { path: 'reminder', component:ReminderComponent },\n      { path: 'labelnote/:id', component:LabelnoteComponent },\n    ]\n  },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent,canActivate: [LoginAuthGuard]},\n  { path: 'forgetpassword', component: ForgotpasswordComponent },\n  { path: 'resetpassword' , component: ResetpasswordComponent },\n  { path: 'errorpage' ,component: ErrorComponent}\n\n  // { path: 'createnotes', component: NotesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{onSameUrlNavigation: `reload`})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<!-- Angular 5 is using double curly brackets - {{}} - \\n for string interpolation. This simply means that \\n if you have any data in the component class that you\\n want to bind to view or template, just enter double\\n curly brackets and put your variable in between.\\nExample {{title}} of app component wecan bind here..  -->\\n\\n<!-- <mat-toolbar color=\\\"primary\\\">\\n    <mat-icon> menu</mat-icon>\\n    <span> Fundoo Notes </span>\\n</mat-toolbar>  -->\\n\\n<router-outlet></router-outlet> \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","/*Angular 5 component is made up of two main sections,\n  namely the class and the component decorator function \n  prefix with @ metadata */\n\nimport { Component } from '@angular/core';\n\n/*decorator is “a function that adds metadata to a class, \n  its members (properties, methods) and function arguments.” \n  And “the metadata object describes how the HTML template\n  and component class work together.” */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /*Getting and posting data using Observable */\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';//defines route for differnt link\nimport { MaterialModule} from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { ForgotpasswordComponent } from './component/forgotpassword/forgotpassword.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { ResetpasswordComponent } from './component/resetpassword/resetpassword.component';\nimport { NoteListComponent } from './component/notes/note.list.component';\nimport { TrashComponent } from './component/trash/trash.component';\nimport { ArchiveComponent } from './component/archive/archive.component';\nimport { ReminderComponent } from './component/reminder/reminder.component';\nimport { LabelComponent } from './component/label/label.component';\nimport { NotedisplayComponent } from './component/notedisplay/notedisplay.component';\nimport { CollaboratorComponent } from './component/collaborator/collaborator.component';\nimport { UpdateNoteComponent } from './component/update-note/update-note.component';\nimport { ErrorComponent } from './component/error/error.component';\nimport { UpdatelabelComponent } from './component/updatelabel/updatelabel.component';\n\n\nimport { UserService } from './service/user.service';\nimport { LoginService } from './service/login.service';\nimport { RegisterService } from './service/register.service';\nimport { NoteService } from './service/note.service';\nimport { LabelService } from './service/label.service';\nimport { CollaboratorService } from './service/collaborator.service';\n\nimport { NoteFilterPipe } from './filter/notefilter.pipe';\nimport { TokenInterceptor } from './service/tokeninterceptor';\nimport { AuthGuard, LoginAuthGuard} from './authguard/auth.guard';\nimport { ToolbarDirective } from './directive/toolbar.directive';\nimport { SearchFilterPipe } from './filter/search-filter.pipe';\nimport { LabelnotePipe } from './filter/labelnote.pipe';\nimport { LabelnoteComponent } from './component/labelnote/labelnote.component';\n\nconst routes: Routes = [\n  //{path:'register',component:RegisterComponent}\n];\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    CollaboratorComponent,\n    RegisterComponent,\n    LoginComponent,\n    ForgotpasswordComponent,\n    HomeComponent,\n    ResetpasswordComponent,\n    NoteListComponent,\n    TrashComponent,\n    ArchiveComponent,\n    ReminderComponent,\n    LabelComponent,\n    NotedisplayComponent,\n    UpdateNoteComponent, \n    ErrorComponent,\n    UpdatelabelComponent,\n    LabelnoteComponent,\n\n    NoteFilterPipe,\n    SearchFilterPipe,\n    LabelnotePipe,\n\n    ToolbarDirective,\n    ],\n  \n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    RouterModule,\n    HttpClientModule,\n    \n  ],\n\n entryComponents:[LabelComponent,\n                    CollaboratorComponent,\n                      UpdateNoteComponent,\n                        UpdatelabelComponent\n                        ],\n\n  providers: [UserService,\n              LoginService,\n               RegisterService,\n                 NoteService,\n                  LabelService, \n                   CollaboratorService,\n                    AuthGuard, \n                     LoginAuthGuard,\n\n                      {\n                        provide: HTTP_INTERCEPTORS,\n                        useClass: TokenInterceptor,\n                        multi: true\n                  \n                    } \n                  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * @description: This is Auth guard implementation for restricting routes\n * @author: SANA SHAIKh\n * @since: 9/April/2018\n */\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../service/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\n    constructor(private router: Router) {\n     }\n\n     /**@method: This method can activate routes and navigate to login */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('Authorization')) {\n       \n            return true;\n        }\n      \n        this.router.navigate(['/login']);\n        return false;\n    }\n\n    /**@method: This is to activate child routes */\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('Authorization')) {\n       \n            return true;\n        }\n      \n        this.router.navigate(['/login']);\n        return false;\n    }\n\n};\n\n@Injectable()\nexport class LoginAuthGuard implements CanActivate {\n \n    constructor(private router: Router) { }\n     /**Parent routing */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (!localStorage.getItem('Authorization')) {\n       \n            return true;\n        }\n      \n        this.router.navigate(['/home/createnotes']);\n        return false;\n    }\n};\n\n/*@Injectable()\nclass OnlyLoggedInUsersGuard implements CanActivate { \n  constructor(private userService: UserService) {}; \n\n  canActivate() {\n    console.log(\"OnlyLoggedInUsers\");\n    if (this.userService.isLoggedIn()) { \n      return true;\n    } else {\n      window.alert(\"You don't have permission to view this page\"); \n      return false;\n    }\n  }\n}*/\n   \n   \n\n\n\n// WEBPACK FOOTER //\n// ./src/app/authguard/auth.guard.ts","module.exports = \".mat-div{\\n    margin-top: 87px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/archive/archive.component.css\n// module id = ./src/app/component/archive/archive.component.css\n// module chunks = main","module.exports = \"<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\"  class=\\\"mat-div\\\">\\n         <div *ngFor=\\\"let note of notes | noteFilter: {isPin:false,inTrash:false,isArchive:true}\\\" class={{noteView}}>\\n            <app-notedisplay [note]=\\\"note\\\"></app-notedisplay>\\n         </div>\\n  </div>\\n</div>\\n\\n<!-- <div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"1000px\\\" fxLayoutGap=\\\"30px\\\">\\n    <div *ngFor=\\\"let note of notes\\\">\\n      <div *ngIf=\\\"note.isArchive===true\\\">\\n        <mat-card style=\\\"width: max-content;margin-top: 100px;\\\">\\n\\n          <mat-card-header>\\n            <div [innerHTML]=\\\"note.title\\\"></div>\\n          </mat-card-header>\\n\\n          <mat-card-subtitle>\\n            <div [innerHTML]=\\\"note.description\\\"></div>\\n          </mat-card-subtitle>\\n\\n          <div fxLayout=\\\"row wrap\\\"> -->\\n\\n            <!-- Reminder Div -->\\n            <!-- <div>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"remind\\\">\\n                <img src=\\\"/assets/icons/reminder.svg\\\">\\n              </button>\\n\\n              <mat-menu #remind=\\\"matMenu\\\">\\n                <div>\\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                    <b>Reminder:</b>\\n                  </button>\\n                </div>\\n\\n                <button type=\\\"submit\\\" mat-menu-item>\\n                  <div *ngFor=\\\"let note of notes\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\" (click)=\\\"saveReminder(note,'today')\\\">\\n                      <span> Later today &nbsp;&nbsp;&nbsp;</span>\\n                      <span> 8:00 PM</span>\\n                    </div>\\n                  </div>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'tomorrow')\\\">\\n                  <div style=\\\"user-select: none;text-align: left;\\\">\\n                    <span>Tomorrow &nbsp;&nbsp;</span>\\n                    <span> &nbsp;&nbsp; 8:00 PM</span>\\n                  </div>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'nextWeek')\\\">\\n                  <div style=\\\"user-select: none;text-align: left;\\\">\\n                    <span>Next week &nbsp;&nbsp;</span>\\n                    <span> &nbsp;&nbsp; Mon,8:00 AM</span>\\n                  </div>\\n                </button>\\n\\n                <div>\\n                  <button mat-button [mat-menu-trigger-for]=\\\"calender\\\">\\n                    <mat-icon>schedule</mat-icon>\\n                    <span>Pick date and time</span>\\n                  </button>\\n                </div>\\n                <mat-menu #calender=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"saveReminder(note,'pickDate')\\\">\\n                    <mat-form-field>\\n                      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                  </button>\\n\\n                </mat-menu>\\n\\n                <button type=\\\"submit\\\" mat-menu-item>\\n                  <mat-icon>room</mat-icon>\\n                  <span>Pick place</span>\\n                </button>\\n              </mat-menu>\\n            </div> -->\\n\\n            <!-- Color Div -->\\n            <!-- <div>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"color\\\">\\n                <mat-icon>color_lens</mat-icon>\\n            \\n              </button>\\n\\n              <mat-menu #color=\\\"matMenu\\\">\\n                <div>\\n                  <a *ngFor=\\\"let color of colors\\\">\\n                    <img src=\\\"{{color.path}}\\\" (click)=\\\"note.color=color.color;updateNotes(note,'true','color')\\\">\\n                  </a>\\n                </div>\\n              </mat-menu>\\n            </div> -->\\n\\n            <!-- Unachive Div -->\\n            <!-- <div>\\n              <button mat-icon-button type=\\\"submit\\\" (click)=\\\"unArchive(note)\\\">\\n                <mat-icon>unarchive</mat-icon>\\n              </button>\\n            </div> -->\\n\\n\\n            <!-- Delete Div -->\\n            <!-- <div>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n              </button>\\n\\n              <mat-menu #menu=\\\"matMenu\\\">\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"updateNotes(note,'true','trash')\\\">\\n                  <mat-icon>delete</mat-icon>\\n                  <span>Delete note</span>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"addLabel()\\\">\\n                  <mat-icon>label</mat-icon>\\n                  <span>Add Label</span>\\n                </button>\\n              </mat-menu>\\n            </div>\\n          </div>\\n          \\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div> -->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/archive/archive.component.html\n// module id = ./src/app/component/archive/archive.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:This component is for archieve contains a method to refresh notes\n*/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { NoteResponse } from '../../model/noteresponse';\nimport { UserService, NoteService } from '../../service';\n\n@Component({\n  selector: 'app-archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.css']\n})\nexport class ArchiveComponent implements OnInit {\n\n  notes:NoteResponse[];\n  isArchive:any={};\n\n  constructor(private userservice: UserService , private noteServiceObj : NoteService) { }\n\n  ngOnInit() {\n    this.refreshNote();\n  }\n\n  /**@method:This method is to fetch notes */\n  refreshNote(): void {\n    this.noteServiceObj.getNotes()\n                          .subscribe(response => {\n                             this.notes = response;\n                                console.log(\"Notes fetched successfully..\", response)\n       });\n};\n\n/**\n * @method:This method is to unArchieve notes \n * @param note\n*/\n  unArchive(note):void{\n  console.log(\"Unarchive note..\",note);\n            note.isArchive=false;\n            this.noteServiceObj.updateNotes(note)\n                                .subscribe(response=>{\n                                   console.log(response);\n                                     this.refreshNote();\n                                });\n};\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/archive/archive.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/collaborator/collaborator.component.css\n// module id = ./src/app/component/collaborator/collaborator.component.css\n// module chunks = main","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\">\\n\\n    <div><span>Collaborators</span>\\n    </div>\\n\\n    <div> \\n        <!-- /assets/icons/blue.png -->\\n        <!-- <img src=\\\"\\\" alt=\\\"S\\\"> -->\\n        <mat-icon>account_circle</mat-icon>\\n        <span [innerHTML]=\\\"user?.name\\\"></span><br>\\n        <span [innerHTML]=\\\"user?.email\\\"></span>(Owner)\\n    </div>\\n\\n    <div *ngIf=\\\"data.collaborators!=null\\\"> \\n            <div *ngFor=\\\"let collaboratorObj of data.collaborators\\\">\\n                <mat-icon>account_circle</mat-icon>\\n                <span>{{collaboratorObj.sharedUser.email}}</span>\\n                <img style=\\\"margin-right: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"removeCollaborator(collaboratorObj.note.noteId, collaboratorObj.sharedUser.email)\\\">\\n            </div>\\n    </div>\\n\\n    <div>\\n       <mat-form-field >\\n          <mat-icon>person_add</mat-icon>\\n          <input matInput placeholder=\\\"Person or Email to share with\\\" [(ngModel)]=\\\"model.email\\\">\\n       </mat-form-field>\\n    </div>\\n\\n    <div>\\n        <mat-dialog-actions>\\n          <button type=\\\"submit\\\" (click)=\\\"addCollaborator()\\\" mat-raised-button>SAVE</button>\\n          <button mat-button type=\\\"button\\\" [mat-dialog-close]=\\\"true\\\">CANCEL</button>\\n        </mat-dialog-actions>\\n    </div>\\n\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/collaborator/collaborator.component.html\n// module id = ./src/app/component/collaborator/collaborator.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is collaborator component contains methods to add collaborator on notes\n*/\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material';\nimport { importType } from '@angular/compiler/src/output/output_ast';\n\nimport { CollaboratorResponse } from '../../model/collaboratorresponse';\nimport { CurrentUserResp } from '../../model/currentuserresp';\nimport { NoteResponse } from '../../model/noteresponse';\n\nimport { UserService } from '../../service/user.service';\nimport { NoteService } from '../../service/note.service';\nimport { CollaboratorService } from '../../service';\n\n@Component({\n  selector: 'app-collaborator',\n  templateUrl: './collaborator.component.html',\n  styleUrls: ['./collaborator.component.css']\n})\nexport class CollaboratorComponent implements OnInit {\n\n  model:any = {};\n  user : CurrentUserResp;\n  note : NoteResponse;\n  collaborators: CollaboratorResponse;\n\n  crossSvg = '/assets/icons/cross.svg';\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data:NoteResponse, private noteServiceObj:NoteService, private userservice: UserService,private collaboratorServiceObj:CollaboratorService, public dialogRef:MatDialogRef<CollaboratorComponent>) { }\n\n  ngOnInit() {\n      this.userservice.getUser('getuser').subscribe(response =>{\n      this.user=response;\n\n      this.noteServiceObj.getNotes().subscribe(response=>{\n        console.log(\"Output fetched\", this.data);\n      })\n      \n    });\n  }\n\n  /**@method: This method is to add Collaborator*/\n  addCollaborator():void{\n    \n    this.model.noteId=this.data.noteId;\n    console.log(this.model);\n \n    this.collaboratorServiceObj.createCollaborator(this.model)\n                                  .subscribe(response=>{\n                                    // this.data.noteId=response;\n                                    console.log(\"Shared successfully..\",response)\n                                      this.dialogRef.close();\n    });\n}\n\n/**method: This methd is to remove collaborator \n * @param noteId\n * @param email\n*/\nremoveCollaborator(noteId,email){\n \n  this.model.noteId=this.data.noteId;\n  console.log(this.model.noteId);\n\n  this.model.email=email;\n  console.log(this.model.email);\n  \n  this.collaboratorServiceObj.deleteCollaborator(this.model)\n                                .subscribe(response=>{\n                                  console.log(\"Deleted successfully..\",response)\n                            });\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/collaborator/collaborator.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/error/error.component.css\n// module id = ./src/app/component/error/error.component.css\n// module chunks = main","module.exports = \"<div>\\n    <img src=\\\"/assets/icons/404.png\\\">\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/error/error.component.html\n// module id = ./src/app/component/error/error.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  error  = '/assets/icons/404.png';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/error/error.component.ts","module.exports = \".toptoolbar{\\n    background-color: #3f51b5; \\n    position: -webkit-sticky; \\n    position: sticky; \\n    top: 0;z-index: 1000;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/forgotpassword/forgotpassword.component.css\n// module id = ./src/app/component/forgotpassword/forgotpassword.component.css\n// module chunks = main","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\n\\n  <mat-card style=\\\"width: max-content;margin-top:5%;\\\">\\n    <h3 style=\\\"text-align:left; color: blue\\\">\\n      <i>Fundoo Notes</i>\\n    </h3>\\n\\n    <form style=\\\"text-align:center\\\" #forgotpassform=\\\"ngForm\\\" (ngSubmit)=\\\"forgot()\\\">\\n\\n      <div class=\\\"forgotpasscontainer\\\">\\n        <mat-form-field>\\n          <h5 style=\\\"color:#3f51b5;\\\">Enter your email address and we will send you a link to reset your password.</h5>\\n          <input matInput placeholder=\\\"email\\\" type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"button-row\\\">\\n        <button mat-button color=\\\"primary\\\">Send password reset email</button>\\n      </div>\\n    </form>\\n  </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/forgotpassword/forgotpassword.component.html\n// module id = ./src/app/component/forgotpassword/forgotpassword.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is forgot password componet\n*/\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  model:any={};\n  constructor(private userservice:UserService) { }\n\n  ngOnInit() {\n  }\n\n/**@method:This method is to call forgot password Api*/\nforgot():void\n{\n  console.log(this.model);\n  this.userservice.postService('forgetpassword',this.model)\n                    .subscribe(data=>{\n                      console.log(data)});\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/forgotpassword/forgotpassword.component.ts","module.exports = \".toptoolbar{\\n    background-color: #3f51b5; \\n    position: -webkit-sticky; \\n    position: sticky; \\n    top: 0;z-index: 1000;\\n    margin-top: -8px;\\n    margin-left: -8px;\\n}\\n\\n.searchbar{\\n    background-color: #3f51b5; \\n}\\n\\n.toolitems{\\n    color: white;\\n}\\n\\n.example-container {\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n\\n.sidenav\\n{\\n margin-top: 81px;\\n}\\n\\n.sidenavitem{\\n    color: royalblue;\\n}\\n\\nsearch-Box{\\n    height: 39px;\\n    width: 639px;\\n    margin-left: 53px;\\n    margin-right: 181px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/home/home.component.css\n// module id = ./src/app/component/home/home.component.css\n// module chunks = main","module.exports = \"<div>\\n  <mat-toolbar appToolbar class=\\\"toptoolbar\\\">\\n\\n    <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" href=\\\"#\\\" name=\\\"Main menu\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"toolitems\\\">\\n      <span> Fundoo Notes </span>\\n    </div>\\n\\n    <!-- <mat-toolbar class=\\\"searchbar\\\">\\n        <div class=\\\"toolitems\\\">\\n          <button mat-icon-button (click)=\\\"search()\\\">\\n            <mat-icon>search</mat-icon>\\n          </button>\\n        </div>\\n      </mat-toolbar>  \\n    [attr.disabled]=\\\"disabled ? '' : null\\\"-->\\n\\n      <form [formGroup]=\\\"searchForm\\\">\\n            <input type='text' style=\\\" height: 39px; width: 639px; margin-left: 53px; margin-right: 181px;\\\" [formControl]=\\\"inputFormControl\\\">\\n     </form> \\n\\n    <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"refresh()\\\">\\n        <mat-icon>refresh</mat-icon>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"viewlist()\\\">\\n        <mat-icon>view_list</mat-icon>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"apps()\\\">\\n        <mat-icon>apps</mat-icon>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"notify()\\\">\\n        <mat-icon>notifications_none</mat-icon>\\n      </button>\\n    </div>\\n\\n    <!-- <div class=\\\"toolitems\\\">\\n      <button mat-icon-button (click)=\\\"logout()\\\">\\n        <mat-icon>account_circle</mat-icon>\\n      </button>\\n    </div> -->\\n\\n    <div>\\n      <button mat-mini-fab [matMenuTriggerFor]=\\\"appMenu\\\" style=\\\"background-color: #3f51b5;\\\">\\n        <mat-icon>account_circle</mat-icon>\\n      </button>\\n   </div>\\n  </mat-toolbar>\\n\\n  <mat-menu #appMenu=\\\"matMenu\\\">\\n    <div fxLayout=\\\"row\\\">\\n            <mat-icon>account_circle</mat-icon>\\n    </div>\\n   \\n    <button mat-raised-button>Add account</button>\\n    <button mat-raised-button (click)=\\\"logout()\\\">Sign out</button>\\n </mat-menu> \\n\\n  <mat-sidenav-container fxFlexFill class=\\\"example-container\\\">\\n    <mat-sidenav mode=\\\"side\\\" #sidenav opened fxLayout=\\\"column\\\" class=\\\"sidenav\\\">\\n\\n      <div>\\n        <div class=\\\"sidenavitem\\\">\\n          <a routerLink=\\\"/home/createnotes\\\" routerLinkActive=\\\"active\\\" mat-button>\\n            <mat-icon>lightbulb_outline</mat-icon>  Note</a>\\n        </div>\\n\\n      </div>\\n\\n      <div>\\n        <div class=\\\"sidenavitem\\\">\\n          <a routerLink=\\\"/home/trash\\\" routerLinkActive=\\\"active\\\" mat-button>\\n            <mat-icon>delete</mat-icon>  Trash</a>\\n        </div>\\n      </div>\\n\\n      <div>\\n        <div class=\\\"sidenavitem\\\">\\n          <a routerLink=\\\"/home/archive\\\" routerLinkActive=\\\"active\\\" mat-button>\\n            <mat-icon>assignment_returned</mat-icon>  Archive</a>\\n        </div>\\n      </div>\\n\\n     <div>\\n          <div class=\\\"sidenavitem\\\">\\n            <a routerLink=\\\"/home/reminder\\\" routerLinkActive=\\\"active\\\" mat-button>\\n              <img src=\\\"/assets/icons/reminder.svg\\\" class=\\\"sidenavitem\\\" >  Reminders</a>\\n          </div>\\n    </div>\\n\\n    <!-- <div>\\n        <div class=\\\"sidenavitem\\\"> &nbsp;Labels\\n            <button mat-button [matMenuTriggerFor]=\\\"label\\\">Edit</button>\\n        </div>\\n    </div> -->\\n\\n    <div>\\n        <button mat-menu-item style=\\\"color:royalblue\\\">\\n          Labels\\n          <button style=\\\"color:royalblue\\\" (click)=\\\"OpenLabelUpdateDialog(label)\\\">EDIT\\n          </button>\\n\\n        </button>\\n    </div>\\n    \\n      <div *ngFor=\\\"let labelObj of labels\\\">\\n          <div class=\\\"toolitems\\\">\\n            <button [routerLink]=\\\"['/home/labelnote/', labelObj.labelId]\\\" mat-menu-item style=\\\"color:royalblue\\\">\\n              <mat-icon style=\\\"color:royalblue\\\">label</mat-icon>\\n              <span>{{labelObj.labelTitle}}</span>\\n              <!-- <input name=\\\"labels\\\" value=\\\"{{label.labelTitle}}\\\"> -->\\n              \\n               <!-- <i class=\\\"material-icons\\\">create</i> -->\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div>\\n        <button mat-menu-item  (click)=\\\"openLabelDialog()\\\">\\n          <mat-icon style=\\\"color:royalblue\\\">add</mat-icon>\\n          <span style=\\\"color:royalblue\\\">Create new label</span>\\n        </button>\\n       </div>\\n      \\n    <!-- <div *ngIf=\\\"labels!=null\\\">\\n      <div *ngFor=\\\"let label of labels\\\">\\n        <div class=\\\"toolitems\\\">\\n          <button mat-menu-item style=\\\"color:royalblue\\\"> \\n              <mat-icon style=\\\"color:royalblue\\\">label</mat-icon>\\n              <span>{{label.labelTitle}}</span> -->\\n              <!-- <input name=\\\"labels\\\" value=\\\"{{label.labelTitle}}\\\"> -->\\n              \\n               <!-- <i class=\\\"material-icons\\\">create</i> -->\\n          <!-- </button>\\n        </div> \\n       </div> \\n       </div> -->\\n\\n    </mat-sidenav>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-container>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/home/home.component.html\n// module id = ./src/app/component/home/home.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:This is home component which loads only after login\n*/\n\nimport { Component, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { FormsModule, FormGroup, FormControl, FormBuilder} from '@angular/forms'\n\nimport { UserService, NoteService, LabelService } from '../../service';\n\nimport { UpdatelabelComponent } from '../updatelabel/updatelabel.component';\nimport { LabelComponent } from '../label/label.component';\nimport { NoteResponse } from '../../model/noteresponse';\nimport { LabelResponse } from '../../model/labelresponse';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  model:any={};\n  notes: NoteResponse[];\n  labels: LabelResponse[];\n  reminder='/assets/icons/remind.png';\n  \n  searchForm: FormGroup;\n  inputFormControl: FormControl;\n\n  constructor(private userservice: UserService,\n                private noteServiceObj: NoteService, \n                  private labelServiceObj:LabelService,\n                   private dialog: MatDialog,\n                    private router : Router,\n                     private builder: FormBuilder) \n                     { \n                        this.inputFormControl = new FormControl();\n                        this.searchForm = this.builder.group({\n                         inputFormControl: this.inputFormControl\n                        }); \n                     }\n\n  ngOnInit() {\n     //this.refresh();\n     //this.labelServiceObj.getlabel();\n     this.searchText();\n     this.readLabel();\n      }\n\n  /**@method: This is to refresh notes */\n  refresh(): void {\n    // this.noteServiceObj.getNotes()\n    //                     .toPromise()\n    //                       .then(response => {\n    //                          this.notes = response;\n    //                           console.log(\"Notes fetched successfully\");\n    //                                         });\n  };\n  \n  /**@method: This method is to fetch labels*/\n  readLabel():void{\n    this.labelServiceObj.getlabels()\n                          .subscribe(response=>{\n                              this.labels=response;\n                               console.log(\"Labels fetched successfully..\",this.labels);\n                            })\n  }\n\n  /**@method: This method is for logout */\n  logout() : void{\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  notify():void{\n\n  };\n\n  /**@method: This method is to open dialog for adding label */\n  openLabelDialog(){\n    this.dialog.open(LabelComponent, {\n     \n      width: '350px',\n      height: '210px',\n      data : {\n        labels : this.labels\n    }\n    });\n  };\n\n  OpenLabelUpdateDialog(){\n    this.dialog.open(UpdatelabelComponent, {\n      data : {\n        labels : this.labels\n    },\n      \n      height: '210px',\n      \n    });\n  };\n\n  viewlist(){\n    this.noteServiceObj.changeView();\n  }\n\n  searchText(){\n    console.log(\"Test for search\",this.inputFormControl);\n    this.searchForm.valueChanges.subscribe(\n      (formData) => {\n        debugger;\n        console.log(\"search\",formData.inputFormControl);\n        this.userservice.searchData(formData.inputFormControl);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/label/label.component.css\n// module id = ./src/app/component/label/label.component.css\n// module chunks = main","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\">\\n\\n    <div><span>Edit labels</span> </div>\\n    <div>\\n       <mat-form-field >\\n        <input matInput placeholder=\\\"Create new label\\\" [(ngModel)]=\\\"model.labelTitle\\\">\\n       </mat-form-field>\\n    </div>\\n    <div><button type=\\\"submit\\\" (click)=\\\"createLabel()\\\" mat-raised-button>Done</button></div>\\n\\n    <ul>\\n        <li *ngFor=\\\"let labelObj of label\\\"> \\n          {{labelObj.labelTitle}}\\n        </li>\\n    </ul> \\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/label/label.component.html\n// module id = ./src/app/component/label/label.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:This is label component contains method to fetch labels and create labels\n*/\n\nimport { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,MatDialogRef} from '@angular/material';\n\nimport { LabelResponse } from '../../model/labelresponse';\nimport { NoteService, LabelService } from '../../service';\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.css']\n})\nexport class LabelComponent implements OnInit {\n\n  model : any = {};\n  @Input() label : LabelResponse[];\n\n  \n  constructor(@Inject(MAT_DIALOG_DATA)\n                private data: any,\n                private noteServiceObj:NoteService,\n                private labelServiceObj: LabelService ,\n                public dialogRef:MatDialogRef<LabelComponent>) \n                {\n                  this.label = data.labels;\n                 }\n\n  ngOnInit() {\n    //this.refreshLabel();\n  }\n\n  /**@method: This method is to fetch labels */\n  refreshLabel():void{\n    this.labelServiceObj.getLabels()\n                          .toPromise()\n                            .then(response=>{\n                              this.label=response;\n                               console.log(\"Labels fetched successfully..\");\n                            })\n  }\n\n  /**@method:This method is to create labels */\n  createLabel(): void {\n    this.labelServiceObj.createLabel(this.model)\n                      .subscribe(response => {\n                        this.labelServiceObj.reloadLabels();\n                          console.log(\"Label Created successfully..\", response, this.label)\n                           this.dialogRef.close();\n                                             });\n };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/label/label.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/labelnote/labelnote.component.css\n// module id = ./src/app/component/labelnote/labelnote.component.css\n// module chunks = main","module.exports = \"<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\" style=\\\"margin-top:95px\\\">\\n             <div *ngFor=\\\"let note of notes |labelnote : id\\\">\\n                <app-notedisplay [note]=\\\"note\\\"></app-notedisplay>\\n             </div>\\n      </div>\\n    </div>\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/labelnote/labelnote.component.html\n// module id = ./src/app/component/labelnote/labelnote.component.html\n// module chunks = main","/**\n * @author :\n * @since :\n * @description :\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService, NoteService, LabelService } from '../../service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NoteResponse } from '../../model/noteresponse';\n\n@Component({\n  selector: 'app-labelnote',\n  templateUrl: './labelnote.component.html',\n  styleUrls: ['./labelnote.component.css']\n})\nexport class LabelnoteComponent implements OnInit {\n\n  public id;\n  public labelId:number;\n  model:any;\n  notes:NoteResponse[];\n\n  constructor(private route: ActivatedRoute,\n                private noteServiceObj: NoteService) { }\n\n  ngOnInit() {\n    this.noteServiceObj.getNotes()\n                          .subscribe(response => {\n                            this.notes =response;\n                              //console.log(\"Notes..\", this.notes=response);\n                          });\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n      console.log('note label  component Id :',this.id);    \n   });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/labelnote/labelnote.component.ts","module.exports = \".toptoolbar{\\n    background-color: #3f51b5; \\n    position: -webkit-sticky; \\n    position: sticky; \\n    top: 0;z-index: 1000;\\n}\\n\\n.toolitemms{\\n   text-align:left;\\n    color: rgb(231, 231, 236);\\n}\\n\\n.loginCard{\\n    margin-left: 241px;\\n    width: 456px;\\n     margin-top: 538px;\\n}\\n\\n.mat-field{\\n    width: 450px;\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/login/login.component.css\n// module id = ./src/app/component/login/login.component.css\n// module chunks = main","module.exports = \"<div>\\n    <mat-toolbar class=\\\"toptoolbar\\\">\\n        <h3 style=\\\"text-align:left; color: #ececf8\\\">\\n            <i>Fundoo Notes</i>\\n        </h3>\\n\\n        <div fxLayoutAlign=\\\"center center\\\">\\n\\n            <mat-card class=\\\"loginCard\\\">\\n                <!--  <mat-card style=\\\"margin:100px;width:500px;margin-top: 100%;\\\"> -->\\n                <h5 style=\\\"text-align:center; color: #223fe2\\\">\\n                    <i>User Login</i>\\n                </h5>\\n\\n                <form style=\\\"text-align:center\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\n                    <div class=\\\"logincontainer\\\">\\n                        <mat-form-field  class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\"  [formControl]=\\\"emailControl\\\" [errorStateMatcher]=\\\"match\\\" [(ngModel)]=\\\"model.email\\\" required>\\n                            <mat-error *ngIf=\\\"emailControl.hasError('pattern') && !emailControl.hasError('required') \\\">Enter Valid Email address</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"logincontainer\\\">\\n                        <mat-form-field  class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\"  [formControl]=\\\"emailControl\\\"  [errorStateMatcher]=\\\"match\\\" [(ngModel)]=\\\"model.password\\\" required>\\n                            <mat-error *ngIf=\\\"passwordControl.hasError('password') && !passwordControl.hasError('required')\\\">Password is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"logincontainer\\\" style=\\\"text-align:left;\\\">\\n                        <a href=\\\"/forgetpassword\\\">forgot password?</a>\\n                    </div>\\n\\n                    <br>\\n\\n                    <div class=\\\"logincontainer\\\" style=\\\"text-align:left;\\\">\\n                        <a href=\\\"/register\\\">register</a>\\n                    </div>\\n\\n                    <div class=\\\"button-row\\\">\\n                            <!-- [disabled]=\\\"emailControl.invalid || passwordControl.invalid\\\" -->\\n                        <button mat-button color=\\\"primary\\\">\\n                            <a href=\\\"/home\\\"></a>Login</button>\\n                    </div>\\n                </form>\\n\\n            </mat-card>\\n        </div>\\n    </mat-toolbar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/login/login.component.html\n// module id = ./src/app/component/login/login.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is login component contains login method  \n*/\n\nimport { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../service/user.service';\nimport { LoginService } from '../../service/login.service';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: any = {};\n\n  emailControl = new FormControl('', [\n    //Validators.pattern(\"^[\\\\w\\\\d._-]+@[\\\\w\\\\d.-]+\\\\.[\\\\w\\\\d]{2,6}$\"),\n    Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$'),\n  ]);\n\n  passwordControl = new FormControl('', [\n    Validators.required,\n    // Validators.minLength(5),\n    // Validators.maxLength(8),\n    //Validators.pattern('.{4,12}'),\n    Validators.pattern('[A-Za-z0-9]{8}'),\n    //Validators.pattern('((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'),\n  ]);\n  match = new MyErrorStateMatcher();\n  \n  constructor(private userservice: UserService,\n               private loginServiceObj: LoginService, \n                private router: Router) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  /**@method:This method is to set form fields to null */\n  //For Ngform only reset method is available\n  resetForm(form?: NgForm) {\n\n    if (form != null)\n      form.reset;\n      this.model = {\n        email: '',\n        password: ''\n      }\n  }\n\n  /**@method:This method is to call login APi */\n  login(): void {\n    console.log(\"loginForm\", this.model);\n    this.loginServiceObj.login(this.model)\n                          .subscribe(response =>\n      {\n     \n      if (response.status === 200) {\n        console.log(\"Check header..\", response.headers.get(\"Authorization\"));\n        alert(\"Logined Succesfully...\");\n\n        //localStorage.setItem=this.userservice.getToken.toString;\n        localStorage.setItem('Authorization', response.headers.get(\"Authorization\"));\n        \n        this.router.navigate(['/home']);\n          \n        } else if (response.status !== 200) {\n        alert(\"Login Failed..\");\n      }\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/login/login.component.ts","module.exports = \".card{\\n    width:41%;\\n    margin-top: 100px;\\n}\\n\\n\\n.image{\\n    max-width: 249px;\\n    min-width: 249px;\\n    margin-left: -24px;\\n    margin-top: -24px;\\n}\\n\\n\\n.mat-design{\\n    max-width: 201px;\\n    margin-top: 15px;\\n  }\\n\\n\\n.text{\\n    color:#3f51b5; \\n}\\n\\n\\n.divbox{\\n    margin-top: -10%;\\n    top: 20px;\\n}\\n\\n\\n.canedit {\\n    word-wrap: break-word;\\n    white-space: pre-wrap;\\n    outline: none;\\n      line-height: 20px;   \\n }\\n\\n\\n.button{\\n    margin-left: 80%;\\n }\\n\\n\\n.matchip{\\n    block-size: 10px;\\n    width: 175px;\\n}\\n\\n\\n.labelChip{\\n   max-width: -webkit-fit-content;\\n   max-width: -moz-fit-content;\\n   max-width: fit-content;\\n   block-size: 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/notedisplay/notedisplay.component.css\n// module id = ./src/app/component/notedisplay/notedisplay.component.css\n// module chunks = main","module.exports = \"\\n\\n<!-- <div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"900px\\\" fxLayoutGap=\\\"20px\\\"> -->\\n\\n    <mat-card  [style.background]=\\\"note.color\\\" class=\\\"mat-design\\\">\\n\\n          <div *ngIf=\\\"note.noteImage\\\">\\n              <img class=\\\"image\\\" [src]=\\\"note.imageString\\\"/>\\n          </div>\\n\\n        <div style=\\\"margin-left: 90%;\\\">\\n          \\n            <img [src]=\\\"getIcon(note)\\\" (click)=\\\"updateNotes(note,status,'pin')\\\">\\n        </div>\\n\\n      <div (click)=\\\"openNoteDialog(note)\\\">\\n        <mat-card-header>\\n            <!-- {{note.title}} -->\\n          <div [innerHTML]=\\\"note.title\\\"></div>\\n        </mat-card-header>\\n\\n        <mat-card-subtitle>\\n          <!-- {{note.description}} -->\\n          <div [innerHTML]=\\\"note.description\\\"></div>\\n        </mat-card-subtitle>\\n      </div>  \\n      \\n    <!-- For Showing reminder -->\\n      <div *ngIf=\\\"note.reminder!=null\\\">\\n          <div mat-menu-item fxLayout=\\\"row\\\">\\n              <mat-chip-list>\\n                    <mat-chip color=\\\"primary\\\" style=\\\"margin-left: -15px;\\\" selected=\\\"true\\\" class=\\\"matchip\\\">\\n                        <mat-icon style=\\\"color: #fafafa; margin-left: -10px;\\\">schedule</mat-icon>\\n                        <label style=\\\"margin-left: -17px;\\\">{{note.reminder|date:'MMM dd,y, hh:mm a'}}</label>\\n                        <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"saveReminder(note,'null')\\\">\\n                    </mat-chip>\\n              </mat-chip-list>\\n           \\n            </div>\\n      </div>\\n\\n        <!-- For showing label -->\\n          <div *ngIf=\\\"note.labels!=null\\\">\\n            <div *ngFor=\\\"let label of note.labels\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n\\n                <div>\\n                  <mat-chip-list>\\n                    <mat-chip color=\\\"primary\\\" selected=\\\"true\\\" class=\\\"labelChip\\\">\\n                      {{label.labelTitle}}\\n                      <!-- <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"removeLabel(note, label.labelId,'null')\\\"> -->\\n                      <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"removeLabel(label.labelId)\\\">\\n\\n                    </mat-chip>\\n                  </mat-chip-list>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- For showing collaborator -->\\n          <div *ngIf=\\\"note.collaborators!=null\\\">\\n            <div *ngFor=\\\"let collaborator of note.collaborators\\\">\\n\\n              <mat-chip-list>\\n                <mat-chip>\\n                  {{collaborator.sharedUser.email}}\\n                  <!-- <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\"> -->\\n                </mat-chip>\\n              </mat-chip-list>\\n\\n            </div>\\n          </div>\\n\\n      \\n          <!-- All buttons row Wrap -->\\n          <div fxLayout=\\\"row\\\" style=\\\"margin-left: -20px;\\\">\\n\\n              <!-- Reminder Div -->\\n              <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"remind\\\">\\n                  <img src=\\\"/assets/icons/reminder.svg\\\">\\n                </button>\\n  \\n                <mat-menu #remind=\\\"matMenu\\\">\\n                  <div>\\n                    <button type=\\\"submit\\\" mat-menu-item>\\n                      <b>Reminder:</b>\\n                    </button>\\n                  </div>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                    <div *ngFor=\\\"let note of notes\\\">\\n                      <div style=\\\"user-select: none;text-align: left;\\\" (click)=\\\"saveReminder(note,'today')\\\">\\n                        <span> Later today &nbsp;&nbsp;&nbsp;</span>\\n                        <span> 8:00 PM</span>\\n                      </div>\\n                    </div>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'tomorrow')\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\">\\n                      <span>Tomorrow &nbsp;&nbsp;</span>\\n                      <span> &nbsp;&nbsp; 8:00 PM</span>\\n                    </div>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'nextWeek')\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\">\\n                      <span>Next week &nbsp;&nbsp;</span>\\n                      <span> &nbsp;&nbsp; Mon,8:00 AM</span>\\n                    </div>\\n                  </button>\\n  \\n                  <div>\\n                    <button mat-button [mat-menu-trigger-for]=\\\"calender\\\">\\n                      <mat-icon>schedule</mat-icon>\\n                      <span>Pick date and time</span>\\n                    </button>\\n                  </div>\\n                  <mat-menu #calender=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"saveReminder(note,'pickDate')\\\">\\n                      <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                      </mat-form-field>\\n                    </button>\\n                  </mat-menu>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                    <mat-icon>room</mat-icon>\\n                    <span>Pick place</span>\\n                  </button>\\n                </mat-menu>\\n              </div>\\n  \\n              <!-- Collaborator Div -->\\n              <div>\\n                <button mat-menu-item (click)=\\\"openCollaboratorDialog(note)\\\">\\n                  <mat-icon style=\\\"margin-left: -17px; margin-top: -6px;\\\">person_add</mat-icon>\\n                </button>\\n              </div>\\n  \\n              <!-- Color Div -->\\n              <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"color\\\">\\n                  <mat-icon style=\\\"margin-left: -60px;\\\">color_lens</mat-icon>\\n                  <!-- assets/icons/color.svg -->\\n                </button>\\n  \\n                <mat-menu #color=\\\"matMenu\\\">\\n                  <div>\\n                    <a *ngFor=\\\"let color of colors\\\">\\n                      <img src=\\\"{{color.path}}\\\" (click)=\\\"note.color=color.color; updateNotes(note,'true','color')\\\">\\n                    </a>\\n                  </div>\\n                </mat-menu>\\n              </div>\\n  \\n              <!-- Image div -->\\n            <div style=\\\"margin-left: -37px;\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"imagemenu\\\">\\n                  <mat-icon>image</mat-icon>\\n                  <!-- assets/icons/color.svg -->\\n                </button>\\n             \\n  \\n              <mat-menu #imagemenu=\\\"matMenu\\\">\\n                <div>\\n                  <input type=\\\"file\\\" (click)=\\\"handleFileInput($event.target.files, note.noteId)\\\">\\n                </div>\\n                <!-- <button mat-icon-button type=\\\"file\\\" (click)=\\\"handleFileInput($event.target.files)\\\">\\n                    <mat-icon>image</mat-icon>\\n                </button>   -->\\n  \\n              </mat-menu>\\n            </div>\\n  \\n              <!-- Archive Div -->\\n              <div style=\\\"margin-left: -19px;\\\">\\n                <button mat-button type=\\\"submit\\\" (click)=\\\"updateNotes(note,'' + !note.isArchive,'archive')\\\">\\n                  <mat-icon>archive</mat-icon>\\n                </button>\\n\\n              </div>\\n  \\n              <!-- Delete Div -->\\n              <div style=\\\"margin-left: -36px;\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                  <mat-icon style=\\\"color:royalblue\\\">more_vert</mat-icon>\\n                </button>\\n  \\n                <mat-menu #menu=\\\"matMenu\\\">\\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"updateNotes(note,'true','trash')\\\">\\n                    <mat-icon>delete</mat-icon>\\n                    <span>Delete note</span>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item [matMenuTriggerFor]=\\\"label\\\" (click)=\\\"addLabel()\\\">\\n                    <mat-icon style=\\\"color:royalblue\\\">label</mat-icon>\\n                    <span>Change Labels</span>\\n                  </button>\\n  \\n                  <mat-menu #label=\\\"matMenu\\\">\\n                    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n                      <div>\\n                        <span>label note</span>\\n                      </div>\\n  \\n                      <div>\\n                        <mat-form-field>\\n                          <input matInput placeholder=\\\"Enter label name\\\">\\n                          <button mat-button>\\n                            <mat-icon>search</mat-icon>\\n                          </button>\\n                        </mat-form-field>\\n                      </div>\\n  \\n                      <div *ngIf=\\\"labels!=null\\\">\\n                        <div *ngFor=\\\"let label of labels\\\">\\n                          <label>\\n                            <input type=\\\"checkbox\\\" name=\\\"labels\\\" value=\\\"{{label.labelTitle}}\\\" [(ngModel)]=\\\"label.checked\\\" (change)=\\\"optionChange($event, label.labelId, note.noteId)\\\"\\n                            /> {{label.labelTitle}}\\n                          </label>\\n                        </div>\\n                      </div>\\n  \\n                    </div>\\n                  </mat-menu>\\n  \\n                </mat-menu>\\n              </div>\\n  \\n            </div>\\n\\n      </mat-card>\\n<!--       \\n</div>\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/notedisplay/notedisplay.component.html\n// module id = ./src/app/component/notedisplay/notedisplay.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is notes display component contains methods to create and update notes\n*/\nimport { Component, OnInit,Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { FormGroup, FormControl, NgForm, FormGroupDirective } from '@angular/forms';\n\nimport { environment } from '../../../environments/environment';\n\nimport { NoteResponse } from '../../model/noteresponse';\nimport { LabelResponse } from '../../model/labelresponse';\nimport { CollaboratorResponse } from '../../model/collaboratorresponse';\n\nimport { NoteFilterPipe } from '../../filter/notefilter.pipe';\n\nimport { UserService, NoteService, LabelService } from '../../service';\n\nimport { CollaboratorComponent } from '../collaborator/collaborator.component';\nimport { UpdateNoteComponent } from '../update-note/update-note.component';\n\n@Component({\n  selector: 'app-notedisplay',\n  templateUrl: './notedisplay.component.html',\n  styleUrls: ['./notedisplay.component.css']\n})\nexport class NotedisplayComponent implements OnInit {\n\n  @Input() note : any;\n\n  model     : any = {};\n  inTrash   : any = {};\n  isArchive : any = {};\n  isPin     : any = {};\n  searchForm    : FormGroup;\n  inputFormControl: FormControl;\n\n  notes     : NoteResponse[]; //= [{noteId:0,title:\"sample\", description : \"fdfsdf\" }];\n  labels    : LabelResponse[];\n  collaborators : CollaboratorResponse[];\n\n\n  pinSvg    ='/assets/icons/pin.svg';\n  unpinSvg  ='/assets/icons/unpin.svg';\n  colorSvg  ='/assets/icons/colorSvg';\n  crossSvg  = '/assets/icons/cross.svg';\n\n  colors = [{\n    color: '#FF0000',\n    path: '/assets/icons/Red.png'\n  }, {\n    color: '#fcff77',\n    path: '/assets/icons/yellow.png'\n  }, {\n    color: '#80ff80',\n    path: '/assets/icons/green.png'\n  }, {\n    color: '#9ee0ff',\n    path: '/assets/icons/skyblue.png'\n  }, {\n    color: '#7daaf2',\n    path: '/assets/icons/blue.png'\n  }, {\n    color: '#9966ff',\n    path: '/assets/icons/purple.png'\n  }, {\n    color: '#ff99cc',\n    path: '/assets/icons/pink.png'\n  }\n  ];\n\n  \n  constructor(private userservice: UserService, private noteServiceObj: NoteService , private labelServiceObj:LabelService, private dialog: MatDialog) { }\n\n  /**@method:This ngOnInit method loads all the notes at the time of initialization */\n  ngOnInit() {\n    this.readlabel();\n   //this.refreshNote();\n   //this.noteServiceObj.reloadNotes();\n   //this.refreshLabel();\n  }\n\n  readlabel() : void{\n    this.labels = this.labelServiceObj.labels;\n    this.labelServiceObj.changeLabel.subscribe((labelArry)=>{\n      this.labels = labelArry;\n    })\n  }\n\n  /*checkIcon(note){\n    //var isPin=true;\n    \n    if(this.note.isPin === false){\n      return this.unpinSvg;\n    }\n   \n    return this.pinSvg;\n  }*/\n\n  getIcon(note){\n    if(!note.isPin){\n      return '/assets/icons/pin.svg'\n    }\n\n    return '/assets/icons/unpin.svg';\n  }\n\n  /**@method:This method is to fetch notes */\n  refreshNote(): void {\n    this.noteServiceObj.getNotes()\n                        .toPromise()\n                          .then(response => {\n                             this.notes = response;\n                              console.log(\"Notes fetched successfully\");\n                                            });\n  };\n\n  /**@method: This method is to fetch labels */\n  refreshLabel():void{\n    this.labelServiceObj.getLabels()\n                          .toPromise()\n                            .then(response=>{\n                              this.labels=response;\n                              console.log(\"Labels fetched successfully..\");\n                            })\n  }\n  \n  /**@method:This method is to move the notes to trash\n   * @param:note,status,field\n   */\n  update(note):void{\n    this.noteServiceObj.updateNotes(note)\n                        .subscribe(response => {\n                          this.noteServiceObj.reloadNotes();  \n                            console.log(response);\n                          });\n  }\n\n  updateNotes(note,status,field){\n\n    if(field =='trash'){\n\n        note.inTrash=status;\n        this.update(note);\n        console.log(\"Moved notes to trash..\");\n    }\n\n    else if(field =='archive'){\n\n        note.isArchive=status;\n        this.update(note);\n        console.log(\"Moved notes to archive...\");\n    }\n\n    else if(field == 'pin'){\n\n        note.isPin=status;\n        this.update(note);\n        console.log(\"Pin note..\");\n    }\n\n    else if(field == 'pin'){\n\n        note.isPin=status;\n        this.update(note);\n        console.log(\"Unpinned note..\");\n    }\n\n    else if(field == 'color'){\n     \n        this.update(note);\n        console.log(\"Set color\");\n      }\n  };\n\n/**@method:This method is to set reminder of notes\n * @param:note,field\n */\nremind(note):void{\n  this.noteServiceObj.updateNotes(note)\n                      .subscribe(response=>{\n                        console.log(response);\n                        this.refreshNote();\n                                            });\n}\n\nsaveReminder(note,field){\n \n  var today =new Date();\n\n  if(field == 'today'){\n\n      today.setHours(20);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder= today;\n      this.remind(note);\n  }\n  else if(field == 'tomorrow'){\n\n      today.setDate(today.getDate()+1);\n      today.setHours(8);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder= today;\n      this.remind(note);\n\n  }else if(field == 'nextWeek'){\n\n      today.setDate(today.getDate()+6);\n      today.setHours(8);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder=today;\n      this.remind(note);\n  }\n  else if(field == 'pickDate'){\n\n    today.setDate(today.getDate());\n    today.setHours(8);\n    today.setMinutes(0);\n    today.setMilliseconds(0);\n    note.reminder=today;\n    this.remind(note);\n  }\n\n  else if (field == 'null') {\n           \n    note.reminder=null;\n    this.remind(note);\n  }\n}\n\n/**@method:This method is to add LAbels */\naddLabel():void{\n  this.labelServiceObj.getLabels()\n                        .subscribe(response=>{\n                          this.labels=response;\n                          console.log(\"Label fetched successfully..\",response, this.labels);\n                        });\n}\n\noptionChange(status, labelId, noteId){\n \n  console.log(\"Checkk..\",status.bubbles);\n  this.labelServiceObj.addRemoveLabel(status, labelId, noteId)\n                        .subscribe(response=>{\n                          console.log(\"status changed..\");\n                        });\n}\n\n/**@method:This method is to remove labels \n * @param note\n * @param labelId\n * @param field\n\nremoveLabel(note,labelId,field){\n\n  note.labels=null;\n  this.labelServiceObj.addRemoveLabel(labelId,note,field);\n  console.log(note,labelId,field);\n}*/\n\nremoveLabel(labelId){\n\n  this.model.labelId=labelId;\n  this.labelServiceObj.deleteLabel(labelId)\n                      .subscribe(response => {\n                        console.log(\"Removed label\", response);\n                      });\n}\n\n/**@method:This method is to open collaborator dialog\n * @param note\n */\nopenCollaboratorDialog(note){\n  this.dialog.open(CollaboratorComponent, {\n    data : note,\n    width: '350px',\n    height: '210px'\n  });\n};\n\n/**@method:This method is to upload a image \n * @param noteId\n * @param event\n */\nhandleFileInput(event,noteId) {\n\n  this.model.event= event;\n  console.log(\"Note image->>\", event)\n\n  this.model.noteId=noteId;\n  \n  this.noteServiceObj.uploadImage(this.model)\n                      .subscribe(response=>{\n                       console.log(\"Image uploaded successfully..\");\n  });\n}\n\nopenNoteDialog(note){\n  this.dialog.open(UpdateNoteComponent,{\n   data : note,\n     width: '350px',\n    height: '400px'\n  });\n}\n\nsearchText(){\n  console.log(\"Test for search\",this.inputFormControl);\n  this.searchForm.valueChanges.subscribe(\n    (formData) => {\n      console.log(formData.inputFormControl);\n      this.userservice.searchData(formData.inputFormControl);\n    });\n}\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/notedisplay/notedisplay.component.ts","module.exports = \".card{\\n    width: 41%;\\n    height: 8px;\\n    margin-top: 100px;\\n}\\n\\n.image{\\n    max-width: 249px;\\n    min-width: 249px;\\n    margin-left: -24px;\\n    margin-top: -24px;\\n}\\n\\n.pin{\\n    margin-top: 50px\\n}\\n\\n.text{\\n    color:#3f51b5; \\n}\\n\\n.divbox{\\n    margin-top: -10%;\\n}\\n\\n.canedit {\\n    word-wrap: break-word;\\n    white-space: pre-wrap;\\n    outline: none;\\n      line-height: 20px;   \\n }\\n\\n.button{\\n    margin-left: 80%;\\n }\\n\\n.matchip{\\n    block-size: 10px;\\n}\\n\\n.mat-design{\\n    max-width: 201px;\\n    margin-top: 15px;\\n  }\\n\\n.edit {\\n    word-wrap: break-word;\\n    white-space: pre-wrap;\\n    outline: none;\\n    line-height: 20px; \\n    }\\n\\n.topNote{\\n    width: 471px;\\n    height: 17px;\\n    margin-top: 99px;\\n}\\n\\n.openCard{\\n    margin-top: 25px;\\n    width: 479px;\\n}\\n\\n[contentEditable=true]:empty:before{\\n    content:attr(data-text)\\n  }\\n\\n.editable {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  outline: none;\\n  line-height: 20px; \\n  color:#3f51b5; \\n  }\\n\\n.example-card {\\n    max-width: 400px;\\n  }\\n\\n.full-width {\\n    width: 100%;\\n  }\\n\\n.line-height{\\n    line-height: 20px;\\n  }\\n\\n.class-container{\\n    margin-top: 25px;\\n  }\\n\\n.mat-div{\\n    margin-top: 15px;\\n  }\\n\\n.list-view{\\n    width: 100%;\\n    margin-top: 15px;\\n  }\\n\\n.grid-view{\\n    margin-top: 15px;\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/notes/note.list.component.css\n// module id = ./src/app/component/notes/note.list.component.css\n// module chunks = main","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\n\\n  <mat-card class=\\\"topNote\\\">\\n    <div contenteditable='true' class=\\\"edit\\\" (click)=\\\"show=!show\\\">\\n      <span class=\\\"text\\\">Take a note...</span>\\n    </div>\\n  </mat-card>\\n\\n</div>\\n\\n<!-- Div shown on click -->\\n<div fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"show\\\" class=\\\"divbox\\\">\\n  <mat-card class=\\\"openCard\\\">\\n    <div contenteditable='true' data-text='Title' class=\\\"editable line-height\\\" name=\\\"title\\\" (input)=\\\"model.title=$event.target.innerHTML\\\"></div>\\n    <div contenteditable='true' data-text='Take a note..' class=\\\"editable line-height\\\" name=\\\"description\\\" (input)=\\\"model.description=$event.target.innerHTML\\\"></div>\\n\\n    <mat-card-actions>\\n      <button type=\\\"submit\\\" mat-button style=\\\"margin-left: 80%; color:#3f51b5;\\\" onclick=\\\"event.stopPropagation()\\\" (click)=\\\"createNote()\\\" disabled>DONE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n</div>\\n\\n<!-- Div to show pin notes -->\\n<div style=\\\"margin-left: 133px; margin-top: 18px;margin-bottom: -36px;\\\">Pinned</div>\\n\\n<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"900px\\\" fxLayoutGap=\\\"20px\\\">\\n    <div *ngFor=\\\"let note of notes | searchFilter:searchText | noteFilter: {isPin:true,inTrash:false,isArchive:false}\\\" class={{noteView}}>\\n      <!-- <div *ngIf=\\\"note.noteImage\\\">\\n            <img [src]=\\\"note.imageString\\\"/>\\n        </div> -->\\n      <!-- <div *ngFor=\\\"let note of notes\\\"> -->\\n      <!-- <div *ngIf=\\\"note.isPin===true && note.isArchive===false && note.inTrash===false\\\" style=\\\"margin-left: 300px;\\\"> -->\\n\\n      <app-notedisplay [note]=\\\"note\\\"></app-notedisplay>\\n\\n      <!-- <mat-card class=\\\"pin\\\" fxFlex=\\\"230px\\\">\\n\\n          <div style=\\\"margin-left: 90%;\\\">\\n            <img src=\\\"{{unpinSvg}}\\\" (click)=\\\"updateNotes(note,status,'pin')\\\">\\n          </div>\\n\\n          <mat-card-header>\\n            <div [innerHTML]=\\\"note.title\\\"></div>\\n          </mat-card-header>\\n\\n          <mat-card-content>\\n            <div [innerHTML]=\\\"note.description\\\"></div>\\n          </mat-card-content>\\n\\n        </mat-card> -->\\n      <!-- </div> -->\\n    </div>\\n  </div>\\n</div>\\n<!-- Close of Pin div -->\\n\\n<!-- Display cards that is not pin/trash/archive -->\\n\\n<!-- <div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\"> -->\\n<div style=\\\"margin-left: 133px; margin-top: 8px; visibility: visible;\\\">Unpinned</div>\\n\\n<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n      <div fxLayout=\\\"row wrap\\\"  fxLayoutAlign=\\\"space-between center\\\"  class=\\\"mat-div\\\" fxFlex=\\\"900px\\\"> \\n         <div *ngFor=\\\"let note of notes | noteFilter: {isPin:false,inTrash:false,isArchive:false}\\\" class={{noteView}}>\\n            <app-notedisplay [note]=\\\"note\\\"></app-notedisplay>\\n         </div>\\n      </div>\\n</div>\\n</div>\\n    <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-evenly center\\\" > -->\\n    <!-- <div *ngFor=\\\"let note of notes | noteFilter: {isPin:false,isTrash:false,isArchive:false}\\\"> -->\\n    <!-- <div *ngFor=\\\"let note of notes\\\"> -->\\n      <!-- <div *ngIf=\\\"!note.isPin\\\"> -->\\n      <!-- <div *ngIf=\\\"note.inTrash===false && note.isPin===false && note.isArchive===false\\\"> -->\\n        <!-- <note-details [note]=\\\"note\\\" *ngFor=\\\"let note of notes\\\"></note-details> -->\\n        <!-- <mat-card [style.background]=\\\"note.color\\\" class=\\\"mat-design\\\" (click)=\\\"openNoteDialog(note)\\\">\\n\\n          <div *ngIf=\\\"note.noteImage\\\">\\n            <img class=\\\"image\\\" [src]=\\\"note.imageString\\\"/>\\n          </div>\\n          \\n            <div> \\n              <mat-card-header>\\n                <div [innerHTML]=\\\"note.title\\\"></div>\\n              </mat-card-header>\\n\\n              <mat-card-content>\\n                <div [innerHTML]=\\\"note.description\\\"></div>\\n              </mat-card-content>\\n            </div>\\n          \\n\\n          <div style=\\\"margin-left:90%;\\\">\\n            <img src=\\\"/assets/icons/pin.svg\\\" (click)=\\\"updateNotes(note,'true','pin')\\\">\\n          </div> -->\\n\\n          <!-- For showing reminder -->\\n          <!-- <div *ngIf=\\\"note.reminder!=null\\\">\\n            <div mat-menu-item fxLayout=\\\"row\\\">\\n              <mat-chip-list>\\n                <mat-chip color=\\\"primary\\\" selected=\\\"true\\\" class=\\\"matchip\\\">\\n                  <mat-icon style=\\\"color: #fafafa;\\\">schedule</mat-icon>\\n                  <label>{{note.reminder|date:'MMM dd,y, hh:mm a'}}</label>\\n                  <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"saveReminder(note,'null')\\\">\\n                </mat-chip>\\n              </mat-chip-list>\\n\\n            </div>\\n          </div> -->\\n\\n          <!-- For showing label -->\\n          <!-- <div *ngIf=\\\"note.labels!=null\\\">\\n            <div *ngFor=\\\"let label of note.labels\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n\\n                <div>\\n                  <mat-chip-list>\\n                    <mat-chip color=\\\"primary\\\" selected=\\\"true\\\" class=\\\"matchip\\\">\\n                      {{label.labelTitle}}\\n                      <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"removeLabel(note, label.labelId,'null')\\\">\\n                    </mat-chip>\\n                  </mat-chip-list>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div> -->\\n\\n          <!-- For showing collaborator -->\\n          <!-- <div *ngIf=\\\"note.collaborators!=null\\\">\\n            <div *ngFor=\\\"let collaborator of note.collaborators\\\">\\n\\n              <mat-chip-list>\\n                <mat-chip>\\n                  {{collaborator.sharedUser.email}} -->\\n                  <!-- <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\"> -->\\n                <!-- </mat-chip>\\n              </mat-chip-list>\\n\\n            </div>\\n          </div> -->\\n\\n          <!-- All buttons row Wrap -->\\n          <!-- <div fxLayout=\\\"row\\\" style=\\\"margin-left: -20px;\\\"> -->\\n\\n            <!-- Reminder Div -->\\n            <!-- <div>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"remind\\\">\\n                <img src=\\\"/assets/icons/reminder.svg\\\">\\n              </button>\\n\\n              <mat-menu #remind=\\\"matMenu\\\">\\n                <div>\\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                    <b>Reminder:</b>\\n                  </button>\\n                </div>\\n\\n                <button type=\\\"submit\\\" mat-menu-item>\\n                  <div *ngFor=\\\"let note of notes\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\" (click)=\\\"saveReminder(note,'today')\\\">\\n                      <span> Later today &nbsp;&nbsp;&nbsp;</span>\\n                      <span> 8:00 PM</span>\\n                    </div>\\n                  </div>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'tomorrow')\\\">\\n                  <div style=\\\"user-select: none;text-align: left;\\\">\\n                    <span>Tomorrow &nbsp;&nbsp;</span>\\n                    <span> &nbsp;&nbsp; 8:00 PM</span>\\n                  </div>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'nextWeek')\\\">\\n                  <div style=\\\"user-select: none;text-align: left;\\\">\\n                    <span>Next week &nbsp;&nbsp;</span>\\n                    <span> &nbsp;&nbsp; Mon,8:00 AM</span>\\n                  </div>\\n                </button>\\n\\n                <div>\\n                  <button mat-button [mat-menu-trigger-for]=\\\"calender\\\">\\n                    <mat-icon>schedule</mat-icon>\\n                    <span>Pick date and time</span>\\n                  </button>\\n                </div>\\n                <mat-menu #calender=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"saveReminder(note,'pickDate')\\\">\\n                    <mat-form-field>\\n                      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                  </button>\\n                </mat-menu>\\n\\n                <button type=\\\"submit\\\" mat-menu-item>\\n                  <mat-icon>room</mat-icon>\\n                  <span>Pick place</span>\\n                </button>\\n              </mat-menu>\\n            </div> -->\\n\\n            <!-- Collaborator Div -->\\n            <!-- <div>\\n              <button mat-menu-item (click)=\\\"openCollaboratorDialog(note)\\\">\\n                <mat-icon style=\\\"margin-left: -17px;\\n                margin-top: -6px;\\\">person_add</mat-icon>\\n              </button>\\n            </div> -->\\n\\n            <!-- Color Div -->\\n            <!-- <div>\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"color\\\">\\n                <mat-icon style=\\\"    margin-left: -60px;\\\">color_lens</mat-icon> -->\\n                <!-- assets/icons/color.svg -->\\n              <!-- </button>\\n\\n              <mat-menu #color=\\\"matMenu\\\">\\n                <div>\\n                  <a *ngFor=\\\"let color of colors\\\">\\n                    <img src=\\\"{{color.path}}\\\" (click)=\\\"note.color=color.color; updateNotes(note,'true','color')\\\">\\n                  </a>\\n                </div>\\n              </mat-menu>\\n            </div> -->\\n\\n            <!-- Image div -->\\n            <!-- <div style=\\\"margin-left: -37px;\\\">\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"imagemenu\\\">\\n                <mat-icon>image</mat-icon> -->\\n                <!-- assets/icons/color.svg -->\\n              <!-- </button>\\n           \\n\\n            <mat-menu #imagemenu=\\\"matMenu\\\">\\n              <div>\\n                <input type=\\\"file\\\" (click)=\\\"handleFileInput($event.target.files, note.noteId)\\\">\\n              </div> -->\\n              <!-- <button mat-icon-button type=\\\"file\\\" (click)=\\\"handleFileInput($event.target.files)\\\">\\n                  <mat-icon>image</mat-icon>\\n              </button>   -->\\n\\n            <!-- </mat-menu>\\n          </div> -->\\n\\n            <!-- Archive Div -->\\n            <!-- <div style=\\\"    margin-left: -19px;\\\">\\n              <button mat-button type=\\\"submit\\\" (click)=\\\"updateNotes(note,'true','archive')\\\">\\n                <mat-icon>archive</mat-icon>\\n              </button>\\n            </div> -->\\n\\n            <!-- Delete Div -->\\n            <!-- <div style=\\\"margin-left: -36px;\\\">\\n              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                <mat-icon style=\\\"color:royalblue\\\">more_vert</mat-icon>\\n              </button>\\n\\n              <mat-menu #menu=\\\"matMenu\\\">\\n                <button type=\\\"submit\\\" mat-menu-item (click)=\\\"updateNotes(note,'true','trash')\\\">\\n                  <mat-icon>delete</mat-icon>\\n                  <span>Delete note</span>\\n                </button>\\n\\n                <button type=\\\"submit\\\" mat-menu-item [matMenuTriggerFor]=\\\"label\\\" (click)=\\\"addLabel()\\\">\\n                  <mat-icon style=\\\"color:royalblue\\\">label</mat-icon>\\n                  <span>Change Labels</span>\\n                </button>\\n\\n                <mat-menu #label=\\\"matMenu\\\">\\n                  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div>\\n                      <span>label note</span>\\n                    </div>\\n\\n                    <div>\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Enter label name\\\">\\n                        <button mat-button>\\n                          <mat-icon>search</mat-icon>\\n                        </button>\\n                      </mat-form-field>\\n                    </div>\\n\\n                    <div *ngIf=\\\"labels!=null\\\">\\n                      <div *ngFor=\\\"let label of labels\\\">\\n                        <label>\\n                          <input type=\\\"checkbox\\\" name=\\\"labels\\\" value=\\\"{{label.labelTitle}}\\\" [(ngModel)]=\\\"label.checked\\\" (change)=\\\"optionChange($event, label.labelId, note.noteId)\\\"\\n                          /> {{label.labelTitle}}\\n                        </label>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </mat-menu>\\n\\n              </mat-menu>\\n            </div>\\n\\n          </div>\\n        </mat-card>\\n      </div> -->\\n    <!-- </div> -->\\n  <!-- </div>\\n</div> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/notes/note.list.component.html\n// module id = ./src/app/component/notes/note.list.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is notes component contains methods to create and update notes\n*/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from \"@angular/material\";\nimport { FormGroup, FormControl, NgForm, FormGroupDirective } from '@angular/forms';\n\nimport { environment } from '../../../environments/environment';\n\nimport { CollaboratorComponent } from '../collaborator/collaborator.component';\nimport { UpdateNoteComponent } from '../update-note/update-note.component';\n\nimport { NoteResponse } from '../../model/noteresponse';\nimport { LabelResponse } from '../../model/labelresponse';\nimport { CollaboratorResponse } from '../../model/collaboratorresponse';\n\nimport { NoteFilterPipe } from '../../filter/notefilter.pipe';\n\nimport { UserService, NoteService, LabelService } from '../../service';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './note.list.component.html',\n  styleUrls: ['./note.list.component.css']\n})\nexport class NoteListComponent implements OnInit {\n\n      model     : any = {};\n      inTrash   : any = {};\n      isArchive : any = {};\n      isPin     : any = {};\n      response  : any = {};\n      searchText: string = \"\";\n  fileToUpload  : File = null;\n  gridListView  : boolean;\n  noteView      : string=localStorage.getItem('class');\n  searchForm    : FormGroup;\n  inputFormControl: FormControl;\n\n  notes         : NoteResponse[]; //= [{noteId:0,title:\"sample\", description : \"fdfsdf\" }];\n  labels        : LabelResponse[];\n  collaborators : CollaboratorResponse[];\n\n  pinSvg    ='/assets/icons/pin.svg';\n  unpinSvg  ='/assets/icons/unpin.svg';\n  colorSvg  ='/assets/icons/colorSvg';\n  crossSvg  = '/assets/icons/cross.svg';\n\n  colors = [{\n    color: '#FF0000',\n    path: '/assets/icons/Red.png'\n  }, {\n    color: '#fcff77',\n    path: '/assets/icons/yellow.png'\n  }, {\n    color: '#80ff80',\n    path: '/assets/icons/green.png'\n  }, {\n    color: '#9ee0ff',\n    path: '/assets/icons/skyblue.png'\n  }, {\n    color: '#7daaf2',\n    path: '/assets/icons/blue.png'\n  }, {\n    color: '#9966ff',\n    path: '/assets/icons/purple.png'\n  }, {\n    color: '#ff99cc',\n    path: '/assets/icons/pink.png'\n  }\n  ];\n\n  constructor(private userservice: UserService,\n              private noteServiceObj: NoteService ,\n                private labelServiceObj:LabelService,\n                  private dialog: MatDialog) \n                  {\n                    userservice.searchObservable$.subscribe(\n                      FormData=>{\n                        this.searchText = FormData;\n                        console.log(this.searchText);\n\n                      })\n                   }\n\n\n  /**@method:This ngOnInit method loads all the notes at the time of initialization */\n  ngOnInit() {\n    //this.refreshNote();\n   // this.noteServiceObj.reloadNotes()\n    this.readNote();\n    //this.readLabel();\n\n    this.noteServiceObj.getStatus()\n                        .subscribe((status)=>{\n                            this.noteView = status ? \"list-view\" : \"grid-view\";\n                            localStorage.setItem('class',this.noteView);\n                          });\n  }\n\n  /**@method:This method is to fetch notes */\n  readNote(): void {\n    this.noteServiceObj.getnotes()\n                          .subscribe(response => {\n                             this.notes = response;\n                             //debugger;\n                             this.notes.forEach(note =>{\n                              note.imageString = 'data:image/JPEG;base64,' + note.noteImage;\n                              });\n                              console.log(\"Notes fetched successfully\",this.notes);\n                            });\n  };\n\n  /**@method: This method is to fetch labels */\n  readLabel():void{\n    this.labelServiceObj.getlabels()\n                          .subscribe(response=>{\n                              this.labels = response;\n                                console.log(\"Labels fetched successfully..\");\n                            });\n  }\n\n  // refreshPage(): void {\n  //   window.location.reload();\n  // }\n\n  /**@method:This method is to create notes */\n  createNote(): void {\n    this.noteServiceObj.createNotes(this.model)\n                      .subscribe(response => {\n                        //  this.refreshPage();\n                        this.noteServiceObj.reloadNotes();       \n                          console.log(\"Note Created successfully..\", response, this.notes);\n                        });\n\n    /*   let self = this;\n        this.noteServiceObj.createNotes(this.model).subscribe(function(response){\n          console.log(\"Note Created successfully..\", response, self.notes,this.notes);\n        });\n    */\n  };\n\n\n  /**@method: This method is to fetch labels */\n  refreshLabel():void{\n    this.labelServiceObj.reloadLabels();\n  }\n  \n  /**@method:This method is to move the notes to trash\n   * @param:note,status,field\n   */\n  update(note):void{\n    this.noteServiceObj.updateNotes(note)\n                        .subscribe(response => {\n                          this.noteServiceObj.reloadNotes();  \n                            console.log(response);\n                          });\n  }\n\n  updateNotes(note,status,field){\n\n    if(field =='trash'){\n\n        note.inTrash=status;\n        this.update(note);\n        console.log(\"Moved notes to trash..\");\n    }\n\n    else if(field =='archive'){\n\n        note.isArchive=status;\n        this.update(note);\n        console.log(\"Moved notes to archive...\");\n    }\n\n    else if(field == 'pin'){\n\n        note.isPin=status;\n        this.update(note);\n        console.log(\"Pin note..\");\n    }\n\n    else if(field == 'pin'){\n\n        note.isPin=status;\n        this.update(note);\n        console.log(\"Unpinned note..\");\n    }\n\n    else if(field == 'color'){\n     \n        this.update(note);\n        console.log(\"Set color\");\n      }\n  };\n\n/**@method:This method is to set reminder of notes\n * @param:note\n * @param:field\n */\nremind(note):void{\n  this.noteServiceObj.updateNotes(note)\n                      .subscribe(response=>{\n                        console.log(response);\n                         this.readNote();\n                                            });\n}\n\nsaveReminder(note,field){\n \n  var today =new Date();\n\n  if(field == 'today'){\n\n      today.setHours(20);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder= today;\n      this.remind(note);\n  }\n  else if(field == 'tomorrow'){\n\n      today.setDate(today.getDate()+1);\n      today.setHours(8);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder= today;\n      this.remind(note);\n\n  }else if(field == 'nextWeek'){\n\n      today.setDate(today.getDate()+6);\n      today.setHours(8);\n      today.setMinutes(0);\n      today.setMilliseconds(0);\n      note.reminder=today;\n      this.remind(note);\n  }\n  else if(field == 'pickDate'){\n\n    today.setDate(today.getDate());\n    today.setHours(8);\n    today.setMinutes(0);\n    today.setMilliseconds(0);\n    note.reminder=today;\n    this.remind(note);\n  }\n\n  else if (field == 'null') {\n           \n    note.reminder=null;\n    this.remind(note);\n}\n}\n\n/**@method: This method is to add label */\naddLabel():void{\n  this.labelServiceObj.getLabels()\n                        .subscribe(response=>{\n                          this.labels=response;\n                          this.noteServiceObj.reloadNotes();  \n                          console.log(\"Label fetched successfully..\",response, this.labels);\n                        });\n}\n\noptionChange(status, labelId, noteId){\n \n  console.log(\"Checkk..\",status.bubbles);\n  this.labelServiceObj.addRemoveLabel(status, labelId, noteId)\n                        .subscribe(response=>{\n                          console.log(\"status changed..\");\n                        });\n}\n\n/**@method:This method is to remove label \n * @param note\n * @param labelId\n * @param field\n\nremoveLabel(note,labelId,field){\n\n  note.labels=null;\n  this.labelServiceObj.addRemoveLabel(labelId,note,field);\n                       console.log(note,labelId,field);\n}*/\n\nremoveLabel(labelId){\n\n  this.model.labelId=labelId;\n  this.labelServiceObj.deleteLabel(labelId)\n                      .subscribe(response => {\n                        this.noteServiceObj.reloadNotes();  \n                        console.log(\"Removed label\", response);\n                      });\n}\n\n/**@method: This method is to open collaborator dialog \n * @param note\n*/\nopenCollaboratorDialog(note){\n  this.dialog.open(CollaboratorComponent, {\n    data : note,\n    width: '350px',\n    height: '210px'\n  });\n};\n\n/**@method:This method is to upload a image \n * @param noteId\n * @param event\n */\nhandleFileInput(event,noteId) {\n\n  this.model.event= event;\n  console.log(\"Note image->>\", event)\n\n  this.model.noteId=noteId;\n  \n  this.noteServiceObj.uploadImage(this.model)\n                      .subscribe(response=>{\n                       console.log(\"Image uploaded successfully..\");\n  });\n}\n\nopenNoteDialog(note){\n  this.dialog.open(UpdateNoteComponent,{\n   data : note,\n     width: '350px',\n    //  height: '210px'\n  });\n}\n\n/*searchText(){\n  console.log(\"Test for search\",this.inputFormControl);\n  this.searchForm.valueChanges.subscribe(\n    (formData) => {\n      console.log(formData.inputFormControl);\n      this.userservice.searchData(formData.inputFormControl);\n    });\n}*/\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/notes/note.list.component.ts","module.exports = \"/* .register-button-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n} */\\n\\n.toptoolbar{\\n  background-color: #3f51b5; \\n  position: -webkit-sticky; \\n  position: sticky; \\n  top: 0;z-index: 1000;\\n}\\n\\n.mat-field{\\n  width: 500px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/register/register.component.css\n// module id = ./src/app/component/register/register.component.css\n// module chunks = main","module.exports = \"<div>\\n    <mat-toolbar class=\\\"toptoolbar\\\">\\n        <h3 style=\\\"text-align:left; color: #ececf8\\\">\\n            <i>Fundoo Notes</i>\\n        </h3>\\n\\n        <div fxLayoutAlign=\\\"center center\\\">\\n            <mat-card style=\\\"margin-left: 223px; margin-top: 559px; width: 499px;\\\">\\n               \\n                <h5 style=\\\"text-align:center; color: blue\\\">\\n                    <i>User Registration</i>\\n                </h5>\\n\\n                <form style=\\\"text-align:center\\\" #registrationFrom=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n                    <div class=\\\"registercontainer\\\">\\n                        <mat-form-field class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" [formControl]=\\\"nameControl\\\" [(ngModel)]=\\\"model.name\\\">\\n                            <mat-error *ngIf=\\\"nameControl.hasError('required')\\\">Name is required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"registercontainer\\\">\\n                        <mat-form-field class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" [formControl]=\\\"emailControl\\\" [(ngModel)]=\\\"model.email\\\">\\n                            <mat-error *ngIf=\\\"emailControl.hasError('required')\\\">Email Address is required</mat-error>\\n                            <mat-error *ngIf=\\\"emailControl.hasError('pattern') && !emailControl.hasError('required') \\\">Enter Valid Email address</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"registercontainer\\\">\\n                        <mat-form-field class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" [formControl]=\\\"passwordControl\\\" [(ngModel)]=\\\"model.password\\\">\\n                            <mat-error *ngIf=\\\"passwordControl.hasError('required')\\\">Password is required</mat-error>\\n                            <mat-error *ngIf=\\\"passwordControl.hasError('pattern') && !passwordControl.hasError('required') \\\">Enter a valid Password</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"registercontainer\\\">\\n                        <mat-form-field class=\\\"mat-field\\\">\\n                            <input matInput placeholder=\\\"mobile number\\\" name=\\\"mobileNo\\\" type=\\\"tel\\\" [formControl]=\\\"mobileControl\\\" [(ngModel)]=\\\"model.mobileNo\\\">\\n                            <mat-error *ngIf=\\\"mobileControl.hasError('required')\\\">Mobile number required</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"button-row\\\">\\n                            <!-- [disabled]=\\\"nameControl.invalid || mobileControl.invalid || emailControl.invalid || passwordControl.invalid\\\" -->\\n                        <button mat-button color=\\\"primary\\\" type=\\\"submit\\\">Register</button>\\n                    </div>\\n                </form>\\n            </mat-card>\\n        </div>\\n    </mat-toolbar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/register/register.component.html\n// module id = ./src/app/component/register/register.component.html\n// module chunks = main","/*****\n * @author Sana Shaikh\n * @since 9/04/2018\n * @description This is register component contains a method to register user.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { NgForm} from '@angular/forms';\nimport { UserService } from '../../service/user.service';\nimport { RegisterService } from '../../service/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  model:any={};\n\n  nameControl = new FormControl('', [\n    Validators.required,\n    //Validators.pattern('[a-zA-Z0-9]'),\n   ]);\n\n   emailControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n  ]);\n\n  passwordControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern('.{4,12}'),\n  ]);\n\n  mobileControl = new FormControl('',[\n    Validators.required,\n    //Validators.pattern(\"[0-9]{0-10}\")\n  ]);\n\n  constructor(private userservice:UserService,\n                private registerSericeObj:RegisterService) { \n  }\n\n/*****\n * @method resetForm\n * @argument {form?:}\n * @description This method is used to reset form fields to null\n */\n  ngOnInit() {\n    this.resetForm();\n    }\n\n  /**@method: This method is to set form fields to null*/\n  resetForm(form? : NgForm){\n    if(form!=null)\n    form.reset();\n    this.model={\n      name:'',\n      email:'',\n      password:'',\n      mobileNo:''\n    }\n  }\n\n /**@method:This method is to call register Api */\n  register():void{\n    \n    console.log(this.model);\n    this.registerSericeObj.register(this.model)\n                            .subscribe(data=>console.log(data));\n                              this.resetForm();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/register/register.component.ts","module.exports = \".matchip{\\n    block-size: 10px;\\n}\\n\\n.maticon{\\n    color: #fafafa;\\n}\\n\\n.mat-card{\\n    top:100px;\\n}\\n\\n.mat-div{\\n    margin-top: 106px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/reminder/reminder.component.css\n// module id = ./src/app/component/reminder/reminder.component.css\n// module chunks = main","module.exports = \"<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n      <div fxLayout=\\\"row wrap\\\"  fxLayoutAlign=\\\"space-between center\\\"  class=\\\"mat-div\\\" fxFlex=\\\"900px\\\"> \\n         <div *ngFor=\\\"let note of notes\\\" class={{noteView}}>\\n            <div *ngIf=\\\"note.reminder!=null\\\">\\n              <app-notedisplay [note]=\\\"note\\\"></app-notedisplay>\\n            </div>\\n         </div>\\n      </div>\\n</div>\\n</div>\\n\\n<!-- <div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"1000px\\\" fxLayoutGap=\\\"30px\\\">\\n      <div *ngFor=\\\"let note of notes\\\">\\n          <div *ngIf=\\\"note.reminder!=null\\\">\\n\\n          \\n          <mat-card [style.background]=\\\"note.color\\\" class=\\\"mat-card\\\">\\n  \\n            <div style=\\\"margin-left:90%;\\\">\\n              <img src=\\\"/assets/icons/pin.svg\\\" (click)=\\\"updateNotes(note,'true','pin')\\\">\\n            </div>\\n  \\n            <mat-card-header>\\n              <div [innerHTML]=\\\"note.title\\\"></div>\\n            </mat-card-header>\\n  \\n            <mat-card-subtitle>\\n              <div [innerHTML]=\\\"note.description\\\"></div>\\n            </mat-card-subtitle>\\n\\n            <div *ngIf=\\\"note.reminder!=null\\\">\\n                <div mat-menu-item fxLayout=\\\"row\\\">\\n                    <mat-chip-list>\\n                          <mat-chip color=\\\"primary\\\" selected=\\\"true\\\" class=\\\"matchip\\\">\\n                              <mat-icon style=\\\"color: #fafafa;\\\">schedule</mat-icon>\\n                              <label>{{note.reminder|date:'MMM dd,y, hh:mm a'}}</label>\\n                              <img style=\\\"margin-left: 8px;\\\" src=\\\"{{crossSvg}}\\\" (click)=\\\"saveReminder(note,'null')\\\">\\n                          </mat-chip>\\n                    </mat-chip-list>\\n                 \\n                  </div>\\n            <div>\\n  \\n             </div>\\n            </div>\\n  \\n            \\n            <div fxLayout=\\\"row wrap\\\">\\n  \\n             \\n              <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"remind\\\">\\n                  <img src=\\\"/assets/icons/reminder.svg\\\">\\n                </button>\\n  \\n                <mat-menu #remind=\\\"matMenu\\\">\\n                  <div>\\n                    <button type=\\\"submit\\\" mat-menu-item>\\n                      <b>Reminder:</b>\\n                    </button>\\n                  </div>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                      <div *ngFor=\\\"let note of notes\\\">\\n                          <div style=\\\"user-select: none;text-align: left;\\\" (click)=\\\"saveReminder(note,'today')\\\">\\n                            <span> Later today &nbsp;&nbsp;&nbsp;</span>\\n                             <span> 8:00 PM</span>\\n                          </div>\\n                      </div>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'tomorrow')\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\">\\n                      <span>Tomorrow &nbsp;&nbsp;</span>\\n                      <span> &nbsp;&nbsp; 8:00 PM</span>\\n                    </div>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note,'nextWeek')\\\">\\n                    <div style=\\\"user-select: none;text-align: left;\\\">\\n                      <span>Next week &nbsp;&nbsp;</span>\\n                      <span> &nbsp;&nbsp; Mon,8:00 AM</span>\\n                    </div>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"saveReminder(note, 'pick')\\\">\\n                    <mat-icon>schedule</mat-icon>\\n                    <span>Pick date and time</span>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item>\\n                    <mat-icon>room</mat-icon>\\n                    <span>Pick place</span>\\n                  </button>\\n                </mat-menu>\\n              </div>\\n  \\n             \\n              <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"color\\\">\\n                  <mat-icon>color_lens</mat-icon>\\n                 \\n                </button>\\n  \\n                <mat-menu #color=\\\"matMenu\\\">\\n                  <div>\\n                    <a *ngFor=\\\"let color of colors\\\">\\n                      <img src=\\\"{{color.path}}\\\" (click)=\\\"note.color=color.color;updateNotes(note,'true','color')\\\">\\n                    </a>\\n                  </div>\\n                </mat-menu>\\n              </div>\\n  \\n             \\n              <div>\\n                <button mat-button type=\\\"submit\\\" (click)=\\\"updateNotes(note,'true','archive')\\\">\\n                  <mat-icon>archive</mat-icon>\\n                </button>\\n              </div>\\n  \\n             \\n              <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                  <mat-icon>more_vert</mat-icon>\\n                </button>\\n  \\n                <mat-menu #menu=\\\"matMenu\\\">\\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"updateNotes(note,'true','trash')\\\">\\n                    <mat-icon>delete</mat-icon>\\n                    <span>Delete note</span>\\n                  </button>\\n  \\n                  <button type=\\\"submit\\\" mat-menu-item (click)=\\\"addLabel()\\\">\\n                    <mat-icon>label</mat-icon>\\n                    <span>Add Label</span>\\n                  </button>\\n                </mat-menu>\\n              </div>\\n  \\n            </div>\\n          </mat-card>\\n  \\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/reminder/reminder.component.html\n// module id = ./src/app/component/reminder/reminder.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:This component is for reminding the notes\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { NoteResponse } from '../../model/noteresponse';\nimport { UserService, NoteService } from '../../service';\n\n@Component({\n    selector: 'app-reminder',\n    templateUrl: './reminder.component.html',\n    styleUrls: ['./reminder.component.css']\n})\nexport class ReminderComponent implements OnInit {\n\n    notes: NoteResponse[];\n    crossSvg = '/assets/icons/cross.svg';\n\n    constructor(private userServiceObj: UserService, private noteServiceObj: NoteService) { }\n    ngOnInit() {\n        this.refreshNote();\n    }\n\n    /**@method:This method is to fetch notes */\n    refreshNote(): void {\n        this.noteServiceObj.getNotes()\n                            .subscribe(response => {\n                              this.notes = response;\n                                console.log(\"Notes fetched successfully..\", response)\n            });\n    };\n\n\n    /**@method:This method is to move the notes to trash\n     * @param:note,status,field\n     */\n    update(note): void {\n        this.noteServiceObj.updateNotes(note)\n                            .subscribe(response => {\n                                console.log(response);\n                                this.refreshNote();\n            });\n    }\n\n    updateNotes(note, status, field) {\n\n        if (field == 'trash') {\n\n            note.inTrash = status;\n            this.update(note);\n            console.log(\"Moved notes to trash..\");\n        }\n\n        else if (field == 'archive') {\n\n            note.isArchive = status;\n            this.update(note);\n            console.log(\"Moved notes to archive...\");\n        }\n\n        else if (field == 'pin') {\n\n            note.isPin = status;\n            this.update(note);\n            console.log(\"Pin note..\");\n        }\n\n        else if (field == 'pin') {\n\n            note.isPin = status;\n            this.update(note);\n            console.log(\"Unpinned note..\");\n        }\n\n        else if (field == 'color') {\n\n            this.update(note);\n            console.log(\"Set color\");\n        }\n    };\n\n    /**@method:This method is to set reminder of notes\n     * @param:note,field\n     */\n    remind(note): void {\n        this.noteServiceObj.updateNotes(note)\n                            .subscribe(response => {\n                                console.log(response);\n                                    this.refreshNote();\n            });\n    }\n\n    saveReminder(note, field) {\n\n        var today = new Date();\n\n        if (field == 'today') {\n\n            today.setHours(20);\n            today.setMinutes(0);\n            today.setMilliseconds(0);\n            note.reminder = today;\n            this.remind(note);\n        }\n        else if (field == 'tomorrow') {\n\n            today.setDate(today.getDate() + 1);\n            today.setHours(8);\n            today.setMinutes(0);\n            today.setMilliseconds(0);\n            note.reminder = today;\n            this.remind(note);\n\n        } \n        else if (field == 'nextWeek') {\n\n            today.setDate(today.getDate() + 6);\n            today.setHours(8);\n            today.setMinutes(0);\n            today.setMilliseconds(0);\n            note.reminder = today;\n            this.remind(note);\n        }\n\n        else if (field == 'null') {\n           \n            note.reminder=null;\n            this.remind(note);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/reminder/reminder.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/resetpassword/resetpassword.component.css\n// module id = ./src/app/component/resetpassword/resetpassword.component.css\n// module chunks = main","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\n\\n    <mat-card style=\\\"width: max-content;margin-top:5%;\\\">\\n        <h3 style=\\\"text-align:left; color: blue\\\"><i>Fundoo Notes</i></h3>\\n    \\n      <form style=\\\"text-align:center\\\" #resetpassForm=\\\"ngForm\\\" (ngSubmit)=\\\"reset()\\\">\\n    \\n        <div class=\\\"resetpasscontainer\\\">\\n          <mat-form-field>\\n            <h5 style=\\\"color:#3f51b5;\\\">Enter new password</h5>\\n            <input matInput placeholder=\\\"password\\\" type=\\\"text\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\">\\n          </mat-form-field>\\n        </div>\\n    \\n        <div class=\\\"button-row\\\">\\n                <button mat-button color=\\\"primary\\\">Reset password</button>\\n        </div>\\n        </form> \\n      </mat-card>\\n    </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/resetpassword/resetpassword.component.html\n// module id = ./src/app/component/resetpassword/resetpassword.component.html\n// module chunks = main","/**\n*@description:This is reset password component contains a  method to call reset new password Api\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  model:any={};\n  constructor(private userServiceObj:UserService) { }\n\n  ngOnInit() {\n    console.log(window.location.search);\n  }\n\n  /**@method: This method is set new password */\n  reset(){\n    \n    console.log(this.model);\n    var urlPath = 'resetnewpassword'+window.location.search;\n    this.userServiceObj.postService(urlPath,this.model)\n                        .subscribe(data=>{\n                          console.log(data)});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/resetpassword/resetpassword.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/trash/trash.component.css\n// module id = ./src/app/component/trash/trash.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"class-container\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"1000px\\\" fxLayoutGap=\\\"10px\\\">\\n    <div *ngFor=\\\"let note of notes\\\">\\n      <div *ngIf=\\\"note.inTrash===true\\\">\\n      <mat-card style=\\\"margin-top: 100px;margin-right: 20px;\\\">\\n  \\n        <mat-card-header>\\n          <div [innerHTML]=\\\"note.title\\\"></div>\\n        </mat-card-header>\\n  \\n        <mat-card-subtitle>\\n          <div [innerHTML]=\\\"note.description\\\"></div>\\n        </mat-card-subtitle>\\n  \\n        <div>\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n  \\n          <mat-menu #menu=\\\"matMenu\\\">\\n              <button  type=\\\"submit\\\" mat-menu-item (click)=\\\"deleteForever(note)\\\">\\n                 <mat-icon>delete_forever</mat-icon> \\n                <span>Delete Forever</span>\\n              </button>\\n        \\n              <button type=\\\"submit\\\" mat-menu-item (click)=\\\"restore(note)\\\">\\n                  <mat-icon>restore_page</mat-icon>\\n                <span>Restore</span>\\n              </button>\\n            </mat-menu>\\n        </div>\\n      </mat-card>\\n    </div>\\n    </div>\\n  </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/trash/trash.component.html\n// module id = ./src/app/component/trash/trash.component.html\n// module chunks = main","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:This component is for trash contains 2 methods i.e. restore notes and delete notes forever\n*/\n\nimport { Component, OnInit } from '@angular/core';\nimport { NoteResponse } from '../../model/noteresponse';\nimport { UserService, NoteService } from '../../service';\n\n@Component({\n  selector: 'app-trash',\n  templateUrl: './trash.component.html',\n  styleUrls: ['./trash.component.css']\n})\nexport class TrashComponent implements OnInit {\n\n  notes:NoteResponse[];\n  inTrash: any = {};\n\n  constructor(private userservice: UserService , private noteServiceObj : NoteService) { }\n\n  ngOnInit() {\n    this.refreshNote();\n  }\n\n   /**@method:This method is to fetch notes */\n  refreshNote(): void {\n    this.noteServiceObj.getNotes()\n                        .subscribe(response => {\n                            this.notes = response;\n                              console.log(\"Notes fetched successfully..\", response)\n       });\n};\n  \n/**\n* @method:This method is to restore the deleted notes\n* @param note\n*/\nrestore(note): void{\n  console.log(\"Restore notes from trash..\",note);\n            note.inTrash=false;\n            this.noteServiceObj.updateNotes(note)\n                                .subscribe(response=>{\n                                   console.log(response);\n                                     this.refreshNote();\n                                });\n};\n\n/**\n* @method:This method is to delete notes permanently\n* @param note\n*/\ndeleteForever(note): void{\n  console.log(\"noteId\",note);\n                    this.noteServiceObj.deleteNotes(note)\n                                          .subscribe(response => {\n                                            console.log(\"Deleted Successfully..\",response);\n                                              this.refreshNote(); \n  });\n};\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/trash/trash.component.ts","module.exports = \".image{\\n    margin-top: -23px;\\n    max-width: 326px;\\n    min-width: 350px;\\n    margin-left: -24px;\\n}\\n\\n.icon{\\n    margin-left: 242px;\\n    margin-top: -10px;\\n     color:#3f51b5;\\n     -webkit-user-select: none;\\n        -moz-user-select: none;\\n         -ms-user-select: none;\\n             user-select: none;\\n}\\n\\n.btn-update{\\n    margin-left: 234px;\\n    margin-top: 20px;\\n    color:#3f51b5;\\n}\\n\\n[contentEditable=true]:empty:before{\\n    content:attr(data-text)\\n  }\\n\\n.editable {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  outline: none;\\n  line-height: 20px; \\n  } \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/update-note/update-note.component.css\n// module id = ./src/app/component/update-note/update-note.component.css\n// module chunks = main","module.exports = \"<div>\\n    <!-- <div *ngFor=\\\"let note of notes\\\"> -->\\n        <div *ngIf=\\\"data.noteImage\\\">\\n            <img class=\\\"image\\\" [src]=\\\"data.imageString\\\"/>\\n            <!-- <button mat-button (click)=\\\"deleteImage(data)\\\" class=\\\"icon\\\"> -->\\n                <button mat-button (click)=\\\"deleteImage(data)\\\" class=\\\"icon\\\">\\n                    <mat-icon>delete</mat-icon>\\n            </button>\\n        </div>\\n       \\n    <!-- </div> -->\\n\\n    <div id=\\\"updateNoteTitle\\\" contenteditable='true' data-text='Title' name=\\\"title\\\" class=\\\"editable line-height\\\" (input)=\\\"data.title=$event.target.innerHTML\\\">\\n    </div>\\n\\n    <div id=\\\"updateNoteDescription\\\" contenteditable='true' data-text='Take a note...' class=\\\"editable line-height\\\" name=\\\"description\\\" (input)=\\\"data.description=$event.target.innerHTML\\\">\\n    </div>\\n\\n    <div>\\n        <button mat-button class=\\\"btn-update\\\" (click)=\\\"updateNote()\\\">Update</button>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/update-note/update-note.component.html\n// module id = ./src/app/component/update-note/update-note.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material';\n\nimport { NoteResponse } from '../../model/noteresponse';\n\nimport { UserService, NoteService } from '../../service';\n\n@Component({\n  selector: 'app-update-note',\n  templateUrl: './update-note.component.html',\n  styleUrls: ['./update-note.component.css']\n})\nexport class UpdateNoteComponent implements OnInit {\n\n  model:any = {};\n  note : NoteResponse;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any,\n              private userServiceObj:UserService,\n              private noteServiceObj:NoteService,\n              public dialogRef:MatDialogRef<UpdateNoteComponent>) { }\n\n\n  ngOnInit() {\n    document.getElementById('updateNoteTitle').innerHTML=this.data.title;\n    document.getElementById('updateNoteDescription').innerHTML=this.data.description;\n  }\n\n  updateNote(){\n  \n    console.log(this.data);\n     this.noteServiceObj.updateNotes(this.data)\n                          .subscribe(data => {\n                            this.noteServiceObj.reloadNotes();\n                            this.dialogRef.close();\n                            \n                          });\n\n  }\n\n  deleteImage(note) {\n    this.data.noteId = note.noteId;\n    this.noteServiceObj.deleteImage(this.data.noteId )\n                        .subscribe(response => {\n                          console.log(response);\n                        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/update-note/update-note.component.ts","module.exports = \".disble:focus {\\n    outline: none;\\n}\\n\\n.input {\\n    background-color: transparent;\\n    border: 0px solid;\\n    height: 20px;\\n    width: 160px;\\n    color: #CCC;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/updatelabel/updatelabel.component.css\n// module id = ./src/app/component/updatelabel/updatelabel.component.css\n// module chunks = main","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\">\\n\\n  <div>\\n    <span>Edit labels</span>\\n  </div>\\n  \\n  <div>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Create new label\\\" [(ngModel)]=\\\"model.labelTitle\\\">\\n    </mat-form-field>\\n    <i class=\\\"material-icons\\\" (click)=\\\"createLabel()\\\">done</i>\\n  </div>\\n\\n  <div *ngFor=\\\"let labelObj of label\\\">\\n    <input class=\\\"input\\\" #inlineEditControl [(ngModel)]=\\\"labelObj.labelTitle\\\" />\\n\\n    <button mat-button type=\\\"submit\\\" (click)=\\\"updateLabel(labelObj)\\\">\\n      <mat-icon style=\\\"color:royalblue\\\">create</mat-icon>\\n    </button>\\n\\n    <button mat-button type=\\\"submit\\\" (click)=\\\"deleteLabel(labelObj)\\\">\\n      <mat-icon style=\\\"color:royalblue\\\">delete_forever</mat-icon>\\n    </button>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/updatelabel/updatelabel.component.html\n// module id = ./src/app/component/updatelabel/updatelabel.component.html\n// module chunks = main","import { Component, OnInit , Inject, Input} from '@angular/core';\nimport { MAT_DIALOG_DATA,\n            MatDialogRef} from '@angular/material';\n\nimport { LabelResponse } from '../../model/labelresponse';\n\nimport { LabelService } from '../../service/label.service';\nimport { NoteService } from '../../service/note.service';\nimport { UserService } from '../../service';\n\n@Component({\n  selector: 'app-updatelabel',\n  templateUrl: './updatelabel.component.html',\n  styleUrls: ['./updatelabel.component.css']\n})\nexport class UpdatelabelComponent implements OnInit {\n\n  model : any = {};\n  @Input() label : LabelResponse[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any,\n                                        private userServiceObj:UserService,\n                                        private noteServiceObj:NoteService,\n                                         private labelServiceObj: LabelService,\n                                          public dialogRef:MatDialogRef<UpdatelabelComponent> )\n                                          { \n                                            this.label = data.labels;\n                                          }\n\n  ngOnInit() {\n    //this.refreshLabel();\n  }\n\n  refreshPage(): void {\n    window.location.reload();\n  }\n\n  /**@method: This method is to fetch labels */\n  refreshLabel():void{\n    this.labelServiceObj.reloadLabels();\n    // this.labelServiceObj.getLabels()\n    //                       .toPromise()\n    //                         .then(response=>{\n    //                            console.log(\"Labels fetched successfully..\");\n    //                         })\n  }\n\n   /**@method:This method is to create labels */\n   createLabel(): void {\n    this.labelServiceObj.createLabel(this.model)\n                      .subscribe(response => {\n\n                          console.log(\"Label Created successfully..\", response, this.label)\n                           this.dialogRef.close();\n                          // this.refreshPage();\n                            this.refreshLabel();\n                                             });\n };\n\n updateLabel(labelObj):void{\n   this.data=labelObj;\n   console.log(this.data);\n\n  this.labelServiceObj.updateLabel(this.data)\n                        .subscribe(data => {\n                          console.log(data);\n                          this.dialogRef.close();\n                          this.refreshLabel();\n                        });\n }\n\n deleteLabel(labelObj):void{\n\n  this.data=labelObj;\n  console.log(this.data);\n\n  this.labelServiceObj.deleteLabel(this.data)\n                        .subscribe(data=>{\n                          console.log(data);\n                          this.dialogRef.close();\n                          this.refreshLabel();\n                        });\n\n \n\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/updatelabel/updatelabel.component.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is color directive to change color of ToolBar\n*/\n\n\nimport { Directive, ElementRef, Input, AfterViewInit} from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap,NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\n\n\n@Directive({\n  selector: '[appToolbar]'\n})\nexport class ToolbarDirective {\n\n  constructor(\n    private activatedroute: ActivatedRoute,\n    private router: Router,\n    private elRef: ElementRef) {\n  }\n\n  ngOnInit(){\n    console.log(\"check->>\", this.router.url)\n    // this.router.events.pipe(filter(event => event instanceof NavigationEnd)\n    //                   .subscribe({URL}:any)\n\n    //                          console.log(event);\n    //                           this.changeColor(event.url); \n    //   }\n    // });\n    this.router.events.subscribe((event: any) => {\n      if(event instanceof NavigationEnd){\n        console.log(event);\n        this.changeColor(event.url);        \n      }\n    });\n\n    /*this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n  ).subscribe(({url}: any) => {\n      console.log(url);\n      this.changeColor(url);\n  });*/\n  \n\n    /*this.activatedroute.parent.url.subscribe((url)=>{\n      console.log(this.router.url)\n    })*/\n\n        /*if (url === 'home/createnotes') {\n        this.changeColor(url);\n      }*/\n   \n\n    /* this.router.events.pairwise().subscribe((url:any) =>{\n         console.log('url=', url)\n     });*/\n  }\n  \n  changeColor(url: string) {\n    //  let Url=\"http://localhost:4200/\"\n\n    if (url.indexOf(\"createnotes\")>-1) {\n      this.elRef.nativeElement.style['background-color'] = 'skyblue';\n\n      // let url = \"createnotes\";\n      // this.ngAfterViewInit(url);\n\n    }\n    else if (url.indexOf(\"archive\")>-1) {\n      this.elRef.nativeElement.style['background-color'] = 'gray';\n     // this.ngAfterViewInit(\"home/trash\");\n    }\n\n    else if(url.indexOf(\"reminder\")>-1){\n      this.elRef.nativeElement.style['background-color'] = 'pink';\n    }\n\n    else if(url.indexOf(\"trash\")>-1){\n      this.elRef.nativeElement.style['background-color'] = 'RosyBrown';\n    }\n\n\n    // else if (url.indexOf(\"archive\")){\n    //   this.elRef.nativeElement.style['background-color'] = 'black';\n    // }\n  }\n  ngAfterViewInit(url): void {\n\n    // if (url === 'home/createnotes') {\n    //   this.changeColor(\"home/createnotes\")\n    // }\n    // else if (url === 'home/trash') {\n    //   this.changeColor(\"home/trash\")\n    // }\n   // this.changeColor(\"home/trash\")\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/directive/toolbar.directive.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'labelnote'\n})\nexport class LabelnotePipe implements PipeTransform {\n\n  transform(noteArray: Array<any>, labelId:number): any {\n    if(!noteArray)\n      return [];\n    return noteArray.filter(noteObject => {\n      if(noteObject.labels.length == 0)\n        return false;\n      return noteObject.labels.some((labelObject)=> {\n        return labelObject.labelId == labelId;\n      })\n    })\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/filter/labelnote.pipe.ts","/**\n * @description:\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noteFilter'\n})\n\nexport class NoteFilterPipe implements PipeTransform {\n\n\n  transform(notes: Array<any>, option?: any): any {\n    if (!notes) return [];\n\n    /*return notes.filter((noteObj)=>{ \n    return noteObj.isPin == option.isPin\n    }); */\n\n    return notes.filter(noteObj=>{\n\n      var check=true;\n      if(option){\n        for (var index in option) {\n            if(noteObj[index]!=option[index]){\n              check=false;\n              break;\n          }\n      }\n      return check;\n    }\n    return check;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/filter/notefilter.pipe.ts","\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchFilter'\n})\n\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param\n   */\n   transform(items: any, searchText: string): any {\n    if (!searchText || !items) return items;\n\n    return SearchFilterPipe.filter(items, searchText);\n  }\n\n/**\n   * \n   * @param\n   * \n   */\n  static filter(items: Array<{ [key: string]: any }>, searchText: string): Array<{ [key: string]: any }> {\n    searchText = searchText ? searchText : \"\";\n    const toCompare = searchText.toLowerCase();\n\n    return items.filter(function (item: any) {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/filter/search-filter.pipe.ts","/**Purpose:This is material module contains all APIS's needed to implement different\n * modules i.e. registrationForm,loginForm,toolBar,navBar\n * \n * @author: SANA SHAIKh\n * @since: 9/April/2018\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule} from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule(\n    {\n        imports:[\n            FormsModule,\n            FlexLayoutModule,\n\n            MatButtonModule,\n            MatToolbarModule,\n            MatInputModule,\n            MatCardModule, \n            MatDatepickerModule,\n            MatNativeDateModule,\n            MatFormFieldModule,\n            MatIconModule,\n            MatMenuModule,\n            MatSidenavModule,\n            MatDialogModule,\n            MatSelectModule,\n            MatChipsModule,\n            MatCheckboxModule,\n            ReactiveFormsModule\n        ],\n            \n        exports:[\n            FlexLayoutModule,\n            FormsModule,\n\n            MatButtonModule,\n            MatToolbarModule,\n            MatCardModule,\n            MatInputModule,\n            MatFormFieldModule,\n            MatDatepickerModule,\n            MatNativeDateModule,\n            MatIconModule,\n            MatMenuModule,\n            MatSidenavModule,\n            MatDialogModule,\n            MatSelectModule,\n            MatChipsModule,\n            MatCheckboxModule,\n        \n            ReactiveFormsModule\n        ],\n    }\n)\n\nexport class MaterialModule{}\n\n\n// WEBPACK FOOTER //\n// ./src/app/material.module.ts","import { CollaboratorComponent } from \"../component/collaborator/collaborator.component\";\n\nexport class NoteResponse {\n\n  noteId: number;\n  title: string;\n  description: string;\n  inTrash: Boolean;\n  isPin: Boolean;\n  isArchive: Boolean;\n  color: string;\n  reminder: Date;\n  label: Set<Label>;\n  collaborator: Set<Collaborator>;\n  noteImage:any[];\n  imageString: string;\n}\n\nexport class Label {\n\n  labelId: number;\n  labelTitle: string;\n}\n\nexport class Collaborator {\n  collaboratorId: number;\n  sharedUser: User;\n  note: Note;\n}\n\nexport class User {\n  email: string;\n}\n\nexport class Note {\n  noteId: number;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/noteresponse.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is collaborator Service contains method to create collaborator\n*/\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { UserService } from \"./user.service\"\n\n\n@Injectable()\nexport class CollaboratorService {\n\n  model : any = {};\n  constructor(private userServiceObj: UserService) { }\n\n  /**@method: This method is to create collaborator */\n  createCollaborator(model):Observable<any>{\n    return this.userServiceObj.putService('addCollaborator',model);\n  }\n\n  /**method: This method is to remove collaborator */\n  deleteCollaborator(model):Observable<any>{\n    return this.userServiceObj.deleteService('deletecollborator',model);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/collaborator.service.ts","export * from \"./note.service\";\nexport * from \"./user.service\";\nexport * from \"./label.service\";\nexport * from \"./collaborator.service\";\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/index.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is Label Service contains method to create label,get label, add and remove label\n*/\nimport { Injectable,Output,EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { UserService } from './user.service';\nimport { LabelResponse } from '../model/labelresponse';\n\n@Injectable()\nexport class LabelService {\n\n  private labelSubject = new Subject<any>();\n  public labels : Array<any> = [];\n  constructor(private userServiceObj: UserService) { }\n\n  @Output() changeLabel: EventEmitter<Array<any>> = new EventEmitter();\n\n  reloadLabels():void{\n    var path = \"getlabels\";\n    this.userServiceObj.getService(path)\n                        .toPromise()\n                          .then((res)=>{\n                            this.labels = res;\n                            this.changeLabel.emit(res);\n                            this.labelSubject.next(res);\n                          });\n   }\n\n   getlabels():Observable<LabelResponse[]>\n    {\n      setTimeout(this.reloadLabels.bind(this))\n        return this.labelSubject.asObservable();\n    }\n\n  /**@method: This method is to fetch label */\n  getLabels(): Observable<LabelResponse[]> {\n    return this.userServiceObj.getService('getlabels');\n\n  }\n\n  /**@method: This method is to create label */\n  createLabel(label): Observable<any> {\n    return this.userServiceObj.putService('createlabel', label);\n  }\n\n  /**@method: This method is to add and remove label */\n  addRemoveLabel(status, labelId, noteId): Observable<any> {\n    return this.userServiceObj.putServiceLabel('addremovelabel' + '/' + noteId + '/' + labelId + '/' + status.bubbles);\n  }\n\n  updateLabel(data): Observable<any> {\n    return this.userServiceObj.putService('updatelabel',data);\n  }\n\n  deleteLabel(data):Observable<any>{\n    return this.userServiceObj.deleteService('deletelabel',data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/label.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { UserService } from \"./user.service\"\n\n@Injectable()\nexport class LoginService {\n\n  constructor(private userServiceObj : UserService) { }\n\n  login(model): Observable<any>{\n    return this.userServiceObj.postService('login', model);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/login.service.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is Note Service contains method to create note,update note,delete note,get notes\n*/\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { UserService } from \"./user.service\"\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { NoteResponse } from '../model/noteresponse';\n\n\n@Injectable()\nexport class NoteService {\n\n  status:boolean = true;  \n  private viewSubject = new Subject<any>();\n  private noteSubject = new Subject<any>();\n\n  constructor(private userServiceObj : UserService ) { }\n\n  /**@method: This method is to fetch notes */\n  reloadNotes():void{\n    var path = \"getnotes\";\n    debugger;\n    this.userServiceObj.getService(path)\n                        .toPromise()\n                          .then((res)=>{\n                            \n                            this.noteSubject.next(res);\n                          \n                            console.log(\"Notes fetched successfully\");\n                          });\n   }\n\n   getnotes():Observable<NoteResponse[]>\n    {\n      setTimeout(this.reloadNotes.bind(this))\n        return this.noteSubject.asObservable();\n    }\n   \n  changeView(){\n    this.status = !this.status;\n    this.viewSubject.next(this.status);\n  }\n\n  getStatus(){\n    return this.viewSubject.asObservable();\n  }\n\n\n  /**@method: This method is to fetch notes */\n  getNotes () : Observable<NoteResponse[]>{\n    return this.userServiceObj.getService('getnotes');\n  }\n\n   /**@method: This method is to create notes */\n  createNotes(note) :Observable<any>{\n    return this.userServiceObj.putService('createnotes', note);\n  }\n\n   /**@method: This method is to update notes */\n  updateNotes(note):Observable<any>{\n    return this.userServiceObj.putService('updatenotes',note);\n  }\n\n   /**@method: This method is to delete notes */\n  deleteNotes(note): Observable<any>{\n    return this.userServiceObj.deleteService('deletenotes',note);\n  }\n\n  /**@method: This method is to upload image of notes */\n  uploadImage(model):Observable<any>{\n    console.log(\"Checking upload image in service\", model)\n    //return this.userServiceObj.putService('uploadNoteImage',model);\n    return this.userServiceObj.imageUpload('uploadNoteImage',model);\n  }\n\n  deleteImage(model):Observable<any>{\n    return this.userServiceObj.imageDelete('deleteImage',model);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/note.service.ts","import { Injectable } from '@angular/core';\nimport { UserService } from '../service/user.service';\n\n@Injectable()\nexport class RegisterService {\n\n  constructor(private userServiceObj:UserService) { }\n\n  register(model){\n    return this.userServiceObj.postService('register', model);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/register.service.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description:\n*/\n\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: UserService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    console.log(\"In interceptor\");\n\n  if(this.auth.getToken()){\n        request = request.clone({\n            setHeaders: {\n            Authorization: this.auth.getToken()\n          }\n        });\n    }\n\n    return next.handle(request);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/tokeninterceptor.ts","/**\n* @author: SANA SHAIKh\n* @since: 9/April/2018\n* @description: This is User service i.e. common Http services contains methods to get,put,post,delete requests \n*/\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject'; //use to share data b/w components\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Headers, RequestOptions, Response } from '@angular/http';\nimport { NoteResponse } from '../model/noteresponse';\nimport { CurrentUserResp } from '../model/currentuserresp';\nimport { environment } from \"../../environments/environment\";\n\n/*It looks similar to component file but  but it uses the @Injectable() \ndecorator, which means we can import it. into other components and access\n its properties and methods.*/\n\n@Injectable()\nexport class UserService {\n\n  /*model property for class userservice can accept any object */\n  model: any = {};\n  private searchSubject=new Subject<any>();\n  searchObservable$=this.searchSubject.asObservable();\n\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': this.getToken()\n     //'Authorization': localStorage.getItem('Authorization')\n    })\n  };\n\n   public getToken(): string {\n     return localStorage.getItem('Authorization');\n   }\n\n  /*HttpClient is available as an injectable class, with methods \n  to perform HTTP requests. */\n  constructor(private http: HttpClient) { \n    /*if(localStorage.getItem('Authorization'))\n      this.httpOptions.headers = this.httpOptions.headers.append('Authorization', localStorage.getItem('Authorization'));*/\n  }\n\n  // private URL = 'http://localhost:8080/ToDo-App/';\n      private URL= environment.base_url;\n\n     \n  /*A representation of any set of values over any amount of time.\n   This is the most basic building block of RxJS*/\n  public postService(url, model): Observable<any> {\n\n    console.log(url, model);\n    var urlpath = this.URL.concat(url);\n    console.log(urlpath);\n    return this.http.post<any>(urlpath, model, { observe: 'response'});\n  }\n\n  putService(url, model): Observable<any>{\n\n    console.log('testinggg',url,model);\n    var urlpath = this.URL.concat(url);\n    console.log(urlpath);\n    return this.http.put(urlpath, model, this.httpOptions);\n  }\n\n  getService(url : string ,model? : any):Observable<any>{\n    \n    let urlpath=this.URL.concat(url);\n    return this.http.get<any>(urlpath,this.httpOptions);\n  }\n\n  deleteService(url,model):Observable<any>{\n\n    var urlpath=this.URL.concat(url);\n    console.log(\"Http option\",this.httpOptions);\n    return this.http.post<any>(urlpath,model,this.httpOptions);\n  }\n\n\n  getUser(url):Observable<CurrentUserResp>{\n    \n    let urlpath=this.URL.concat(url);\n    return this.http.get<CurrentUserResp>(urlpath,this.httpOptions);\n  }\n\n  isLoggedIn(): boolean {\n    return false;\n  }\n\n  putServiceLabel(url){\n    var urlpath=this.URL.concat(url);\n    console.log(urlpath);\n    return this.http.put(urlpath,this.httpOptions);\n  }\n\n  imageUpload(url, model):Observable<any>{\n    const fd = new FormData()\n    const file = model.event[0]\n    fd.append('image', file)\n    fd.append('noteId', model.noteId)\n    var urlpath=this.URL.concat(url);\n\n    const httpOptions2 = {\n      headers: new HttpHeaders({\n        'Authorization': localStorage.getItem('Authorization')\n      })\n    };\n\n    return this.http.post<any>(urlpath, fd, httpOptions2);\n  }\n\n  imageDelete(url, model):Observable<any>{\n    var urlpath=this.URL.concat(url);\n    return this.http.post<any>(urlpath,model,this.httpOptions);\n  }\n\n  \n  searchData(data : any){\n    console.log(\"in service\", data)\n    this.searchSubject.next(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/user.service.ts","export const environment = {\n  production: true,\n  base_url:\"http://www.mydomain.com/api/\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}